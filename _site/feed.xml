<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-06-21T20:17:01-07:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Journey with Data</title><subtitle>Jamal Kaplan</subtitle><author><name>Jamal Kaplan</name></author><entry><title type="html">Journey starts today</title><link href="http://localhost:4000/2022/06/07/aapstone.html" rel="alternate" type="text/html" title="Journey starts today" /><published>2022-06-07T07:45:13-07:00</published><updated>2022-06-07T07:45:13-07:00</updated><id>http://localhost:4000/2022/06/07/aapstone</id><content type="html" xml:base="http://localhost:4000/2022/06/07/aapstone.html"><![CDATA[<h2 id="this-will-be-another-post">This will be another post</h2>

<p>The journey starts here
Never in all their history have men been able truly to conceive of the world as one: a single sphere, a globe, having the qualities of a globe, a round earth in which all the directions eventually meet, in which there is no center because every point, or none, is center — an equal earth which all men occupy as equals. The airman’s earth, if free men make it, will be truly round: a globe in practice, not in theory.</p>

<p>p&gt;Science cuts two ways, of course; its products can be used for both good and evil. But there’s no turning back from science. The early warnings about technological dangers also come from science.</p>]]></content><author><name>Jamal Kaplan</name></author><summary type="html"><![CDATA[This will be another post]]></summary></entry><entry><title type="html">Capstone Project 1</title><link href="http://localhost:4000/2022/06/07/Capstone1.html" rel="alternate" type="text/html" title="Capstone Project 1" /><published>2022-06-07T07:45:13-07:00</published><updated>2022-06-07T07:45:13-07:00</updated><id>http://localhost:4000/2022/06/07/Capstone1</id><content type="html" xml:base="http://localhost:4000/2022/06/07/Capstone1.html"><![CDATA[<h1 id="data-exploration-capstone-project">Data Exploration Capstone Project</h1>

<h2 id="objectives">Objectives</h2>
<p>Hi All! You are learning a lot in a short span of time. It is now the time to test your data exploration skills with this capstone!</p>

<p>In this notebook, you’re going to apply the skills you’ve been learning, bridging the gap towards the <em>slightly</em> messier work that data scientists do with actual datasets!</p>

<p>Here’s the mystery we’re going to solve: <strong><em>which boroughs of London have seen the greatest increase in housing prices, on average, over the last two decades?</em></strong></p>

<p>A borough is just a fancy word for district. You may be familiar with the five boroughs of New York… well, there are 32 boroughs within Greater London <a href="https://en.wikipedia.org/wiki/London_boroughs">(here’s some info for the curious)</a>. Some of them are more desirable areas to live in, and the data will reflect that with a greater rise in housing prices.</p>

<p><strong><em>In this notebook, we’ll just give you the skeleton of a project, the brief and the data. It’s up to you to play around with it and see what you can find out! Good luck! If you struggle, feel free to ask for help; the more independent work you do, the better it is for your learning!</em></strong></p>

<p>This challenge will make use of Data Exploration with Python skills.</p>

<h2 id="the-data-science-pipeline">The Data Science Pipeline</h2>

<p>When you feel done with your investigations, look back over what you’ve accomplished, and prepare a quick presentation of your findings.</p>

<p>Data Science is magical. In this case study, you’ll get to apply some complex machine learning algorithms. But as  <a href="https://www.youtube.com/watch?v=oUs1uvsz0Ok">David Spiegelhalter</a> reminds us, there is no substitute for simply <strong>taking a really, really good look at the data.</strong> Sometimes, this is all we need to answer our question.</p>

<p>Data Science projects generally adhere to the four stages of Data Science Pipeline:</p>
<ol>
  <li>Sourcing and loading</li>
  <li>Cleaning, transforming, and visualizing</li>
  <li>Modeling</li>
  <li>Evaluating and concluding</li>
</ol>

<h3 id="1-sourcing-and-loading">1. Sourcing and Loading</h3>

<p>Any Data Science project kicks off by importing  <strong><em>pandas</em></strong>. The documentation of this wonderful library can be found <a href="https://pandas.pydata.org/">here</a>. As you’ve seen, pandas is conveniently connected to the <a href="http://www.numpy.org/">Numpy</a> and <a href="https://matplotlib.org/">Matplotlib</a> libraries.</p>

<h4 id="11-importing-libraries">1.1. Importing Libraries</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Let's import the pandas, numpy libraries as pd, and np respectively. 
</span><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>



<span class="c1"># Load the pyplot collection of functions from matplotlib, as plt 
</span><span class="kn">from</span> <span class="nn">matplotlib</span> <span class="kn">import</span> <span class="n">pyplot</span> <span class="k">as</span> <span class="n">plt</span>
</code></pre></div></div>

<h4 id="12--loading-the-data">1.2.  Loading the data</h4>
<p>Your data comes from the <a href="https://data.london.gov.uk/">London Datastore</a>: a free, open-source data-sharing portal for London-oriented datasets.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># First, make a variable called url_LondonHousePrices, and assign it the following link, enclosed in quotation-marks as a string:
# https://data.london.gov.uk/download/uk-house-price-index/70ac0766-8902-4eb5-aab5-01951aaed773/UK%20House%20price%20index.xls
</span>
<span class="n">url_LondonHousePrices</span> <span class="o">=</span> <span class="s">"https://data.london.gov.uk/download/uk-house-price-index/70ac0766-8902-4eb5-aab5-01951aaed773/UK%20House%20price%20index.xls"</span>

<span class="c1"># The dataset we're interested in contains the Average prices of the houses, and is actually on a particular sheet of the Excel file. 
# As a result, we need to specify the sheet name in the read_excel() method.
# Put this data into a variable called properties.  
</span><span class="n">properties</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_excel</span><span class="p">(</span><span class="n">url_LondonHousePrices</span><span class="p">,</span> <span class="n">sheet_name</span><span class="o">=</span><span class="s">'Average price'</span><span class="p">,</span> <span class="n">index_col</span><span class="o">=</span> <span class="bp">None</span><span class="p">)</span>

<span class="n">properties</span><span class="p">.</span><span class="n">head</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Unnamed: 0</th>
      <th>City of London</th>
      <th>Barking &amp; Dagenham</th>
      <th>Barnet</th>
      <th>Bexley</th>
      <th>Brent</th>
      <th>Bromley</th>
      <th>Camden</th>
      <th>Croydon</th>
      <th>Ealing</th>
      <th>...</th>
      <th>NORTH WEST</th>
      <th>YORKS &amp; THE HUMBER</th>
      <th>EAST MIDLANDS</th>
      <th>WEST MIDLANDS</th>
      <th>EAST OF ENGLAND</th>
      <th>LONDON</th>
      <th>SOUTH EAST</th>
      <th>SOUTH WEST</th>
      <th>Unnamed: 47</th>
      <th>England</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>NaT</td>
      <td>E09000001</td>
      <td>E09000002</td>
      <td>E09000003</td>
      <td>E09000004</td>
      <td>E09000005</td>
      <td>E09000006</td>
      <td>E09000007</td>
      <td>E09000008</td>
      <td>E09000009</td>
      <td>...</td>
      <td>E12000002</td>
      <td>E12000003</td>
      <td>E12000004</td>
      <td>E12000005</td>
      <td>E12000006</td>
      <td>E12000007</td>
      <td>E12000008</td>
      <td>E12000009</td>
      <td>NaN</td>
      <td>E92000001</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1995-01-01</td>
      <td>91448.98487</td>
      <td>50460.2266</td>
      <td>93284.51832</td>
      <td>64958.09036</td>
      <td>71306.56698</td>
      <td>81671.47692</td>
      <td>120932.8881</td>
      <td>69158.16225</td>
      <td>79885.89069</td>
      <td>...</td>
      <td>43958.48001</td>
      <td>44803.42878</td>
      <td>45544.52227</td>
      <td>48527.52339</td>
      <td>56701.5961</td>
      <td>74435.76052</td>
      <td>64018.87894</td>
      <td>54705.1579</td>
      <td>NaN</td>
      <td>53202.77128</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1995-02-01</td>
      <td>82202.77314</td>
      <td>51085.77983</td>
      <td>93190.16963</td>
      <td>64787.92069</td>
      <td>72022.26197</td>
      <td>81657.55944</td>
      <td>119508.8622</td>
      <td>68951.09542</td>
      <td>80897.06551</td>
      <td>...</td>
      <td>43925.42289</td>
      <td>44528.80721</td>
      <td>46051.57066</td>
      <td>49341.29029</td>
      <td>56593.59475</td>
      <td>72777.93709</td>
      <td>63715.02399</td>
      <td>54356.14843</td>
      <td>NaN</td>
      <td>53096.1549</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1995-03-01</td>
      <td>79120.70256</td>
      <td>51268.96956</td>
      <td>92247.52435</td>
      <td>64367.49344</td>
      <td>72015.76274</td>
      <td>81449.31143</td>
      <td>120282.2131</td>
      <td>68712.44341</td>
      <td>81379.86288</td>
      <td>...</td>
      <td>44434.8681</td>
      <td>45200.46775</td>
      <td>45383.82395</td>
      <td>49442.17973</td>
      <td>56171.18278</td>
      <td>73896.84204</td>
      <td>64113.60858</td>
      <td>53583.07667</td>
      <td>NaN</td>
      <td>53201.2843</td>
    </tr>
    <tr>
      <th>4</th>
      <td>1995-04-01</td>
      <td>77101.20804</td>
      <td>53133.50526</td>
      <td>90762.87492</td>
      <td>64277.66881</td>
      <td>72965.63094</td>
      <td>81124.41227</td>
      <td>120097.899</td>
      <td>68610.04641</td>
      <td>82188.90498</td>
      <td>...</td>
      <td>44267.7796</td>
      <td>45614.34341</td>
      <td>46124.23045</td>
      <td>49455.93299</td>
      <td>56567.89582</td>
      <td>74455.28754</td>
      <td>64623.22395</td>
      <td>54786.01938</td>
      <td>NaN</td>
      <td>53590.8548</td>
    </tr>
    <tr>
      <th>5</th>
      <td>1995-05-01</td>
      <td>84409.14932</td>
      <td>53042.24852</td>
      <td>90258.00033</td>
      <td>63997.13588</td>
      <td>73704.04743</td>
      <td>81542.61561</td>
      <td>119929.2782</td>
      <td>68844.9169</td>
      <td>82077.05525</td>
      <td>...</td>
      <td>44223.61973</td>
      <td>44830.98563</td>
      <td>45878.00396</td>
      <td>50369.66188</td>
      <td>56479.80183</td>
      <td>75432.02786</td>
      <td>64530.36358</td>
      <td>54698.83831</td>
      <td>NaN</td>
      <td>53678.24041</td>
    </tr>
    <tr>
      <th>6</th>
      <td>1995-06-01</td>
      <td>94900.51244</td>
      <td>53700.34831</td>
      <td>90107.23471</td>
      <td>64252.32335</td>
      <td>74310.48167</td>
      <td>82382.83435</td>
      <td>121887.4625</td>
      <td>69052.51103</td>
      <td>81630.66181</td>
      <td>...</td>
      <td>44112.96432</td>
      <td>45392.63981</td>
      <td>45679.99539</td>
      <td>50100.43023</td>
      <td>56288.94557</td>
      <td>75606.24501</td>
      <td>65511.008</td>
      <td>54420.15939</td>
      <td>NaN</td>
      <td>53735.15475</td>
    </tr>
    <tr>
      <th>7</th>
      <td>1995-07-01</td>
      <td>110128.0423</td>
      <td>52113.12157</td>
      <td>91441.24768</td>
      <td>63722.70055</td>
      <td>74127.03788</td>
      <td>82898.52264</td>
      <td>124027.5768</td>
      <td>69142.48112</td>
      <td>82352.2226</td>
      <td>...</td>
      <td>44109.58764</td>
      <td>45534.99864</td>
      <td>46037.67312</td>
      <td>49860.00809</td>
      <td>57242.30186</td>
      <td>75984.24079</td>
      <td>65224.88465</td>
      <td>54265.86368</td>
      <td>NaN</td>
      <td>53900.60633</td>
    </tr>
    <tr>
      <th>8</th>
      <td>1995-08-01</td>
      <td>112329.4376</td>
      <td>52232.19868</td>
      <td>92361.31512</td>
      <td>64432.60005</td>
      <td>73547.0411</td>
      <td>82054.37156</td>
      <td>125529.8039</td>
      <td>68993.42545</td>
      <td>82706.65927</td>
      <td>...</td>
      <td>44193.66583</td>
      <td>45111.45939</td>
      <td>45922.53585</td>
      <td>49598.45969</td>
      <td>56732.40547</td>
      <td>75529.34488</td>
      <td>64851.60429</td>
      <td>54365.71495</td>
      <td>NaN</td>
      <td>53600.31975</td>
    </tr>
    <tr>
      <th>9</th>
      <td>1995-09-01</td>
      <td>104473.1096</td>
      <td>51471.61353</td>
      <td>93273.12245</td>
      <td>64509.54767</td>
      <td>73789.54287</td>
      <td>81440.43008</td>
      <td>120596.8511</td>
      <td>69393.50023</td>
      <td>82011.08271</td>
      <td>...</td>
      <td>44088.07696</td>
      <td>44837.86023</td>
      <td>45771.66321</td>
      <td>49319.69715</td>
      <td>56259.28635</td>
      <td>74940.80872</td>
      <td>64352.47119</td>
      <td>54243.98694</td>
      <td>NaN</td>
      <td>53309.2331</td>
    </tr>
  </tbody>
</table>
<p>10 rows × 49 columns</p>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Data_copy</span> <span class="o">=</span> <span class="n">properties</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Use 3 decimal places in output display
</span><span class="n">pd</span><span class="p">.</span><span class="n">set_option</span><span class="p">(</span><span class="s">"display.precision"</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="2-cleaning-transforming-and-visualizing">2. Cleaning, transforming, and visualizing</h3>
<p>This second stage is arguably the most important part of any Data Science project. The first thing to do is take a proper look at the data. Cleaning forms the majority of this stage, and can be done both before or after Transformation.</p>

<p>The end goal of data cleaning is to have tidy data. When data is tidy:</p>

<ol>
  <li>Each variable has a column.</li>
  <li>Each observation forms a row.</li>
</ol>

<p>Keep the end goal in mind as you move through this process, every step will take you closer.</p>

<p><strong>2.1. Exploring your data</strong></p>

<p>Think about your pandas functions for checking out a dataframe.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Data_copy</span><span class="p">.</span><span class="n">columns</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Index(['Unnamed: 0', 'City of London', 'Barking &amp; Dagenham', 'Barnet',
       'Bexley', 'Brent', 'Bromley', 'Camden', 'Croydon', 'Ealing', 'Enfield',
       'Greenwich', 'Hackney', 'Hammersmith &amp; Fulham', 'Haringey', 'Harrow',
       'Havering', 'Hillingdon', 'Hounslow', 'Islington',
       'Kensington &amp; Chelsea', 'Kingston upon Thames', 'Lambeth', 'Lewisham',
       'Merton', 'Newham', 'Redbridge', 'Richmond upon Thames', 'Southwark',
       'Sutton', 'Tower Hamlets', 'Waltham Forest', 'Wandsworth',
       'Westminster', 'Unnamed: 34', 'Inner London', 'Outer London',
       'Unnamed: 37', 'NORTH EAST', 'NORTH WEST', 'YORKS &amp; THE HUMBER',
       'EAST MIDLANDS', 'WEST MIDLANDS', 'EAST OF ENGLAND', 'LONDON',
       'SOUTH EAST', 'SOUTH WEST', 'Unnamed: 47', 'England'],
      dtype='object')
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Data_copy</span><span class="p">.</span><span class="n">duplicated</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Data_copy</span><span class="p">.</span><span class="n">isna</span><span class="p">().</span><span class="nb">sum</span><span class="p">().</span><span class="n">sort_values</span><span class="p">(</span><span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Unnamed: 37             321
Unnamed: 47             321
Unnamed: 34             321
Outer London              0
Richmond upon Thames      0
Southwark                 0
Sutton                    0
Tower Hamlets             0
Waltham Forest            0
Wandsworth                0
Westminster               0
Inner London              0
Unnamed: 0                0
Newham                    0
NORTH EAST                0
NORTH WEST                0
YORKS &amp; THE HUMBER        0
EAST MIDLANDS             0
WEST MIDLANDS             0
EAST OF ENGLAND           0
LONDON                    0
SOUTH EAST                0
SOUTH WEST                0
Redbridge                 0
Merton                    0
City of London            0
Lewisham                  0
Barking &amp; Dagenham        0
Barnet                    0
Bexley                    0
Brent                     0
Bromley                   0
Camden                    0
Croydon                   0
Ealing                    0
Enfield                   0
Greenwich                 0
Hackney                   0
Hammersmith &amp; Fulham      0
Haringey                  0
Harrow                    0
Havering                  0
Hillingdon                0
Hounslow                  0
Islington                 0
Kensington &amp; Chelsea      0
Kingston upon Thames      0
Lambeth                   0
England                   0
dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Displaying information for each column in DataFrame
</span><span class="n">Data_copy</span><span class="p">.</span><span class="n">info</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
Int64Index: 321 entries, 1 to 321
Data columns (total 49 columns):
 #   Column                Non-Null Count  Dtype         
---  ------                --------------  -----         
 0   Unnamed: 0            321 non-null    datetime64[ns]
 1   City of London        321 non-null    object        
 2   Barking &amp; Dagenham    321 non-null    object        
 3   Barnet                321 non-null    object        
 4   Bexley                321 non-null    object        
 5   Brent                 321 non-null    object        
 6   Bromley               321 non-null    object        
 7   Camden                321 non-null    object        
 8   Croydon               321 non-null    object        
 9   Ealing                321 non-null    object        
 10  Enfield               321 non-null    object        
 11  Greenwich             321 non-null    object        
 12  Hackney               321 non-null    object        
 13  Hammersmith &amp; Fulham  321 non-null    object        
 14  Haringey              321 non-null    object        
 15  Harrow                321 non-null    object        
 16  Havering              321 non-null    object        
 17  Hillingdon            321 non-null    object        
 18  Hounslow              321 non-null    object        
 19  Islington             321 non-null    object        
 20  Kensington &amp; Chelsea  321 non-null    object        
 21  Kingston upon Thames  321 non-null    object        
 22  Lambeth               321 non-null    object        
 23  Lewisham              321 non-null    object        
 24  Merton                321 non-null    object        
 25  Newham                321 non-null    object        
 26  Redbridge             321 non-null    object        
 27  Richmond upon Thames  321 non-null    object        
 28  Southwark             321 non-null    object        
 29  Sutton                321 non-null    object        
 30  Tower Hamlets         321 non-null    object        
 31  Waltham Forest        321 non-null    object        
 32  Wandsworth            321 non-null    object        
 33  Westminster           321 non-null    object        
 34  Unnamed: 34           0 non-null      float64       
 35  Inner London          321 non-null    object        
 36  Outer London          321 non-null    object        
 37  Unnamed: 37           0 non-null      float64       
 38  NORTH EAST            321 non-null    object        
 39  NORTH WEST            321 non-null    object        
 40  YORKS &amp; THE HUMBER    321 non-null    object        
 41  EAST MIDLANDS         321 non-null    object        
 42  WEST MIDLANDS         321 non-null    object        
 43  EAST OF ENGLAND       321 non-null    object        
 44  LONDON                321 non-null    object        
 45  SOUTH EAST            321 non-null    object        
 46  SOUTH WEST            321 non-null    object        
 47  Unnamed: 47           0 non-null      float64       
 48  England               321 non-null    object        
dtypes: datetime64[ns](1), float64(3), object(45)
memory usage: 125.4+ KB
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Data_copy</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">any</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="nb">sum</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>321
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Data_copy</span><span class="p">.</span><span class="n">isnull</span><span class="p">().</span><span class="nb">any</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nb">sum</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Data_copy</span><span class="p">.</span><span class="n">isnull</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Unnamed: 0</th>
      <th>City of London</th>
      <th>Barking &amp; Dagenham</th>
      <th>Barnet</th>
      <th>Bexley</th>
      <th>Brent</th>
      <th>Bromley</th>
      <th>Camden</th>
      <th>Croydon</th>
      <th>Ealing</th>
      <th>...</th>
      <th>NORTH WEST</th>
      <th>YORKS &amp; THE HUMBER</th>
      <th>EAST MIDLANDS</th>
      <th>WEST MIDLANDS</th>
      <th>EAST OF ENGLAND</th>
      <th>LONDON</th>
      <th>SOUTH EAST</th>
      <th>SOUTH WEST</th>
      <th>Unnamed: 47</th>
      <th>England</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>...</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>True</td>
      <td>False</td>
    </tr>
    <tr>
      <th>2</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>...</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>True</td>
      <td>False</td>
    </tr>
    <tr>
      <th>3</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>...</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>True</td>
      <td>False</td>
    </tr>
    <tr>
      <th>4</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>...</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>True</td>
      <td>False</td>
    </tr>
    <tr>
      <th>5</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>...</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>True</td>
      <td>False</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>317</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>...</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>True</td>
      <td>False</td>
    </tr>
    <tr>
      <th>318</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>...</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>True</td>
      <td>False</td>
    </tr>
    <tr>
      <th>319</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>...</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>True</td>
      <td>False</td>
    </tr>
    <tr>
      <th>320</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>...</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>True</td>
      <td>False</td>
    </tr>
    <tr>
      <th>321</th>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>...</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>False</td>
      <td>True</td>
      <td>False</td>
    </tr>
  </tbody>
</table>
<p>321 rows × 49 columns</p>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Data_copy</span><span class="p">.</span><span class="n">describe</span><span class="p">()</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Unnamed: 34</th>
      <th>Unnamed: 37</th>
      <th>Unnamed: 47</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>0.0</td>
      <td>0.0</td>
      <td>0.0</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>std</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>min</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
    <tr>
      <th>max</th>
      <td>NaN</td>
      <td>NaN</td>
      <td>NaN</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Data_copy</span><span class="p">.</span><span class="n">shape</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(321, 46)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Data_copy</span><span class="p">.</span><span class="n">isna</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Unnamed: 0                0
City of London            0
Barking &amp; Dagenham        0
Barnet                    0
Bexley                    0
Brent                     0
Bromley                   0
Camden                    0
Croydon                   0
Ealing                    0
Enfield                   0
Greenwich                 0
Hackney                   0
Hammersmith &amp; Fulham      0
Haringey                  0
Harrow                    0
Havering                  0
Hillingdon                0
Hounslow                  0
Islington                 0
Kensington &amp; Chelsea      0
Kingston upon Thames      0
Lambeth                   0
Lewisham                  0
Merton                    0
Newham                    0
Redbridge                 0
Richmond upon Thames      0
Southwark                 0
Sutton                    0
Tower Hamlets             0
Waltham Forest            0
Wandsworth                0
Westminster               0
Unnamed: 34             321
Inner London              0
Outer London              0
Unnamed: 37             321
NORTH EAST                0
NORTH WEST                0
YORKS &amp; THE HUMBER        0
EAST MIDLANDS             0
WEST MIDLANDS             0
EAST OF ENGLAND           0
LONDON                    0
SOUTH EAST                0
SOUTH WEST                0
Unnamed: 47             321
England                   0
dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Removing spaces in column names in sake of easy use
</span><span class="n">Data_copy</span><span class="p">.</span><span class="n">columns</span> <span class="o">=</span> <span class="n">Data_copy</span><span class="p">.</span><span class="n">columns</span><span class="p">.</span><span class="nb">str</span><span class="p">.</span><span class="n">replace</span><span class="p">(</span><span class="s">"\s+"</span><span class="p">,</span><span class="s">"_"</span><span class="p">,</span><span class="n">regex</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Data_copy</span><span class="p">.</span><span class="n">head</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Unnamed:_0</th>
      <th>City_of_London</th>
      <th>Barking_&amp;_Dagenham</th>
      <th>Barnet</th>
      <th>Bexley</th>
      <th>Brent</th>
      <th>Bromley</th>
      <th>Camden</th>
      <th>Croydon</th>
      <th>Ealing</th>
      <th>...</th>
      <th>NORTH_WEST</th>
      <th>YORKS_&amp;_THE_HUMBER</th>
      <th>EAST_MIDLANDS</th>
      <th>WEST_MIDLANDS</th>
      <th>EAST_OF_ENGLAND</th>
      <th>LONDON</th>
      <th>SOUTH_EAST</th>
      <th>SOUTH_WEST</th>
      <th>Unnamed:_47</th>
      <th>England</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1</th>
      <td>1995-01-01</td>
      <td>91448.985</td>
      <td>50460.227</td>
      <td>93284.518</td>
      <td>64958.09</td>
      <td>71306.567</td>
      <td>81671.477</td>
      <td>120932.888</td>
      <td>69158.162</td>
      <td>79885.891</td>
      <td>...</td>
      <td>43958.48</td>
      <td>44803.429</td>
      <td>45544.522</td>
      <td>48527.523</td>
      <td>56701.596</td>
      <td>74435.761</td>
      <td>64018.879</td>
      <td>54705.158</td>
      <td>NaN</td>
      <td>53202.771</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1995-02-01</td>
      <td>82202.773</td>
      <td>51085.78</td>
      <td>93190.17</td>
      <td>64787.921</td>
      <td>72022.262</td>
      <td>81657.559</td>
      <td>119508.862</td>
      <td>68951.095</td>
      <td>80897.066</td>
      <td>...</td>
      <td>43925.423</td>
      <td>44528.807</td>
      <td>46051.571</td>
      <td>49341.29</td>
      <td>56593.595</td>
      <td>72777.937</td>
      <td>63715.024</td>
      <td>54356.148</td>
      <td>NaN</td>
      <td>53096.155</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1995-03-01</td>
      <td>79120.703</td>
      <td>51268.97</td>
      <td>92247.524</td>
      <td>64367.493</td>
      <td>72015.763</td>
      <td>81449.311</td>
      <td>120282.213</td>
      <td>68712.443</td>
      <td>81379.863</td>
      <td>...</td>
      <td>44434.868</td>
      <td>45200.468</td>
      <td>45383.824</td>
      <td>49442.18</td>
      <td>56171.183</td>
      <td>73896.842</td>
      <td>64113.609</td>
      <td>53583.077</td>
      <td>NaN</td>
      <td>53201.284</td>
    </tr>
    <tr>
      <th>4</th>
      <td>1995-04-01</td>
      <td>77101.208</td>
      <td>53133.505</td>
      <td>90762.875</td>
      <td>64277.669</td>
      <td>72965.631</td>
      <td>81124.412</td>
      <td>120097.899</td>
      <td>68610.046</td>
      <td>82188.905</td>
      <td>...</td>
      <td>44267.78</td>
      <td>45614.343</td>
      <td>46124.23</td>
      <td>49455.933</td>
      <td>56567.896</td>
      <td>74455.288</td>
      <td>64623.224</td>
      <td>54786.019</td>
      <td>NaN</td>
      <td>53590.855</td>
    </tr>
    <tr>
      <th>5</th>
      <td>1995-05-01</td>
      <td>84409.149</td>
      <td>53042.249</td>
      <td>90258.0</td>
      <td>63997.136</td>
      <td>73704.047</td>
      <td>81542.616</td>
      <td>119929.278</td>
      <td>68844.917</td>
      <td>82077.055</td>
      <td>...</td>
      <td>44223.62</td>
      <td>44830.986</td>
      <td>45878.004</td>
      <td>50369.662</td>
      <td>56479.802</td>
      <td>75432.028</td>
      <td>64530.364</td>
      <td>54698.838</td>
      <td>NaN</td>
      <td>53678.24</td>
    </tr>
    <tr>
      <th>6</th>
      <td>1995-06-01</td>
      <td>94900.512</td>
      <td>53700.348</td>
      <td>90107.235</td>
      <td>64252.323</td>
      <td>74310.482</td>
      <td>82382.834</td>
      <td>121887.462</td>
      <td>69052.511</td>
      <td>81630.662</td>
      <td>...</td>
      <td>44112.964</td>
      <td>45392.64</td>
      <td>45679.995</td>
      <td>50100.43</td>
      <td>56288.946</td>
      <td>75606.245</td>
      <td>65511.008</td>
      <td>54420.159</td>
      <td>NaN</td>
      <td>53735.155</td>
    </tr>
    <tr>
      <th>7</th>
      <td>1995-07-01</td>
      <td>110128.042</td>
      <td>52113.122</td>
      <td>91441.248</td>
      <td>63722.701</td>
      <td>74127.038</td>
      <td>82898.523</td>
      <td>124027.577</td>
      <td>69142.481</td>
      <td>82352.223</td>
      <td>...</td>
      <td>44109.588</td>
      <td>45534.999</td>
      <td>46037.673</td>
      <td>49860.008</td>
      <td>57242.302</td>
      <td>75984.241</td>
      <td>65224.885</td>
      <td>54265.864</td>
      <td>NaN</td>
      <td>53900.606</td>
    </tr>
    <tr>
      <th>8</th>
      <td>1995-08-01</td>
      <td>112329.438</td>
      <td>52232.199</td>
      <td>92361.315</td>
      <td>64432.6</td>
      <td>73547.041</td>
      <td>82054.372</td>
      <td>125529.804</td>
      <td>68993.425</td>
      <td>82706.659</td>
      <td>...</td>
      <td>44193.666</td>
      <td>45111.459</td>
      <td>45922.536</td>
      <td>49598.46</td>
      <td>56732.405</td>
      <td>75529.345</td>
      <td>64851.604</td>
      <td>54365.715</td>
      <td>NaN</td>
      <td>53600.32</td>
    </tr>
    <tr>
      <th>9</th>
      <td>1995-09-01</td>
      <td>104473.11</td>
      <td>51471.614</td>
      <td>93273.122</td>
      <td>64509.548</td>
      <td>73789.543</td>
      <td>81440.43</td>
      <td>120596.851</td>
      <td>69393.5</td>
      <td>82011.083</td>
      <td>...</td>
      <td>44088.077</td>
      <td>44837.86</td>
      <td>45771.663</td>
      <td>49319.697</td>
      <td>56259.286</td>
      <td>74940.809</td>
      <td>64352.471</td>
      <td>54243.987</td>
      <td>NaN</td>
      <td>53309.233</td>
    </tr>
    <tr>
      <th>10</th>
      <td>1995-10-01</td>
      <td>108038.118</td>
      <td>51513.758</td>
      <td>92567.385</td>
      <td>64529.937</td>
      <td>73264.054</td>
      <td>81862.161</td>
      <td>117458.492</td>
      <td>68934.612</td>
      <td>80522.661</td>
      <td>...</td>
      <td>43109.994</td>
      <td>44309.999</td>
      <td>45154.72</td>
      <td>49597.936</td>
      <td>55240.289</td>
      <td>74302.08</td>
      <td>64125.806</td>
      <td>54264.606</td>
      <td>NaN</td>
      <td>52844.621</td>
    </tr>
  </tbody>
</table>
<p>10 rows × 49 columns</p>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>

<p><strong>2.2. Cleaning the data</strong></p>

<p>You might find you need to transpose your dataframe, check out what its row indexes are, and reset the index. You  also might find you need to assign the values of the first row to your column headings  . (Hint: recall the .columns feature of DataFrames, as well as the iloc[] method).</p>

<p>Don’t be afraid to use StackOverflow for help  with this.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c1"># Drop first row which makes hard to work on data and it does not such affect 
</span>
<span class="n">Data_copy</span><span class="p">.</span><span class="n">drop</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</code></pre></div></div>

<p><strong>2.3. Cleaning the data (part 2)</strong></p>

<p>You might we have to <strong>rename</strong> a couple columns. How do you do this? The clue’s pretty bold…</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Data_copy</span><span class="p">.</span><span class="n">columns</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Index(['Unnamed:_0', 'Barking_&amp;_Dagenham', 'Barnet', 'Bexley', 'Brent',
       'Bromley', 'Camden', 'Croydon', 'Ealing', 'Enfield', 'Greenwich',
       'Hackney', 'Hammersmith_&amp;_Fulham', 'Haringey', 'Harrow', 'Havering',
       'Hillingdon', 'Hounslow', 'Islington', 'Kensington_&amp;_Chelsea',
       'Kingston_upon_Thames', 'Lambeth', 'Lewisham', 'Merton', 'Newham',
       'Redbridge', 'Richmond_upon_Thames', 'Southwark', 'Sutton',
       'Tower_Hamlets', 'Waltham_Forest', 'Wandsworth', 'Westminster'],
      dtype='object')
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c1"># Rename date column
</span><span class="n">Data_copy</span><span class="p">.</span><span class="n">rename</span><span class="p">(</span><span class="n">columns</span><span class="o">=</span><span class="p">{</span><span class="s">'Unnamed:_0'</span><span class="p">:</span><span class="s">'Date'</span><span class="p">},</span><span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span> 
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Data_copy</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Date</th>
      <th>Barking_&amp;_Dagenham</th>
      <th>Barnet</th>
      <th>Bexley</th>
      <th>Brent</th>
      <th>Bromley</th>
      <th>Camden</th>
      <th>Croydon</th>
      <th>Ealing</th>
      <th>Enfield</th>
      <th>...</th>
      <th>Merton</th>
      <th>Newham</th>
      <th>Redbridge</th>
      <th>Richmond_upon_Thames</th>
      <th>Southwark</th>
      <th>Sutton</th>
      <th>Tower_Hamlets</th>
      <th>Waltham_Forest</th>
      <th>Wandsworth</th>
      <th>Westminster</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1</th>
      <td>1995-01-01</td>
      <td>50460.227</td>
      <td>93284.518</td>
      <td>64958.09</td>
      <td>71306.567</td>
      <td>81671.477</td>
      <td>120932.888</td>
      <td>69158.162</td>
      <td>79885.891</td>
      <td>72514.691</td>
      <td>...</td>
      <td>82070.613</td>
      <td>53539.319</td>
      <td>72189.584</td>
      <td>109326.125</td>
      <td>67885.203</td>
      <td>71536.974</td>
      <td>59865.19</td>
      <td>61319.449</td>
      <td>88559.044</td>
      <td>133025.277</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1995-02-01</td>
      <td>51085.78</td>
      <td>93190.17</td>
      <td>64787.921</td>
      <td>72022.262</td>
      <td>81657.559</td>
      <td>119508.862</td>
      <td>68951.095</td>
      <td>80897.066</td>
      <td>73155.197</td>
      <td>...</td>
      <td>79982.749</td>
      <td>53153.883</td>
      <td>72141.626</td>
      <td>111103.039</td>
      <td>64799.065</td>
      <td>70893.209</td>
      <td>62318.534</td>
      <td>60252.122</td>
      <td>88641.017</td>
      <td>131468.31</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1995-03-01</td>
      <td>51268.97</td>
      <td>92247.524</td>
      <td>64367.493</td>
      <td>72015.763</td>
      <td>81449.311</td>
      <td>120282.213</td>
      <td>68712.443</td>
      <td>81379.863</td>
      <td>72190.441</td>
      <td>...</td>
      <td>80661.683</td>
      <td>53458.264</td>
      <td>72501.355</td>
      <td>107325.474</td>
      <td>65763.297</td>
      <td>70306.838</td>
      <td>63938.677</td>
      <td>60871.085</td>
      <td>87124.815</td>
      <td>132260.342</td>
    </tr>
    <tr>
      <th>4</th>
      <td>1995-04-01</td>
      <td>53133.505</td>
      <td>90762.875</td>
      <td>64277.669</td>
      <td>72965.631</td>
      <td>81124.412</td>
      <td>120097.899</td>
      <td>68610.046</td>
      <td>82188.905</td>
      <td>71442.922</td>
      <td>...</td>
      <td>79990.543</td>
      <td>54479.754</td>
      <td>72228.603</td>
      <td>106875</td>
      <td>63073.621</td>
      <td>69411.944</td>
      <td>66233.194</td>
      <td>60971.397</td>
      <td>87026.002</td>
      <td>133370.204</td>
    </tr>
    <tr>
      <th>5</th>
      <td>1995-05-01</td>
      <td>53042.249</td>
      <td>90258.0</td>
      <td>63997.136</td>
      <td>73704.047</td>
      <td>81542.616</td>
      <td>119929.278</td>
      <td>68844.917</td>
      <td>82077.055</td>
      <td>70630.78</td>
      <td>...</td>
      <td>80873.986</td>
      <td>55803.96</td>
      <td>72366.641</td>
      <td>107707.68</td>
      <td>64420.499</td>
      <td>69759.22</td>
      <td>66432.858</td>
      <td>61494.169</td>
      <td>86518.059</td>
      <td>133911.112</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>317</th>
      <td>2021-05-01</td>
      <td>312430.653</td>
      <td>533319.35</td>
      <td>361919.178</td>
      <td>506917.307</td>
      <td>464872.548</td>
      <td>811080.363</td>
      <td>391236.913</td>
      <td>508368.502</td>
      <td>418235.579</td>
      <td>...</td>
      <td>540692.29</td>
      <td>380125.62</td>
      <td>451935.951</td>
      <td>701319.953</td>
      <td>507543.074</td>
      <td>395317.852</td>
      <td>438160.387</td>
      <td>476898.285</td>
      <td>600170.42</td>
      <td>908209.321</td>
    </tr>
    <tr>
      <th>318</th>
      <td>2021-06-01</td>
      <td>317234.735</td>
      <td>541296.783</td>
      <td>364464.187</td>
      <td>514055.899</td>
      <td>470431.417</td>
      <td>814571.246</td>
      <td>393198.407</td>
      <td>507915.956</td>
      <td>419803.094</td>
      <td>...</td>
      <td>541278.331</td>
      <td>382971.011</td>
      <td>455605.548</td>
      <td>698800.896</td>
      <td>507753.747</td>
      <td>396832.698</td>
      <td>441463.011</td>
      <td>474203.82</td>
      <td>602200.028</td>
      <td>888342.854</td>
    </tr>
    <tr>
      <th>319</th>
      <td>2021-07-01</td>
      <td>319549.93</td>
      <td>536012.669</td>
      <td>366451.639</td>
      <td>528684.055</td>
      <td>466447.004</td>
      <td>906099.2</td>
      <td>389730.086</td>
      <td>515141.329</td>
      <td>421158.795</td>
      <td>...</td>
      <td>544610.4</td>
      <td>366701.669</td>
      <td>461489.598</td>
      <td>719159.046</td>
      <td>519188.469</td>
      <td>401044.143</td>
      <td>459966.726</td>
      <td>493007.748</td>
      <td>602540.242</td>
      <td>922331.022</td>
    </tr>
    <tr>
      <th>320</th>
      <td>2021-08-01</td>
      <td>322496.375</td>
      <td>544558.807</td>
      <td>373547.295</td>
      <td>533696.39</td>
      <td>473570.356</td>
      <td>921525.014</td>
      <td>393245.781</td>
      <td>515422.283</td>
      <td>433986.209</td>
      <td>...</td>
      <td>559114.797</td>
      <td>379482.69</td>
      <td>470113.184</td>
      <td>736113.028</td>
      <td>534447.284</td>
      <td>401378.723</td>
      <td>466570.526</td>
      <td>502104.81</td>
      <td>614932.295</td>
      <td>1016725.048</td>
    </tr>
    <tr>
      <th>321</th>
      <td>2021-09-01</td>
      <td>329287.292</td>
      <td>533093.293</td>
      <td>375156.155</td>
      <td>542095.334</td>
      <td>483955.024</td>
      <td>895902.435</td>
      <td>391878.875</td>
      <td>525536.486</td>
      <td>440813.079</td>
      <td>...</td>
      <td>555225.54</td>
      <td>365357.143</td>
      <td>480339.944</td>
      <td>735675.219</td>
      <td>536755.525</td>
      <td>415227.665</td>
      <td>440846.736</td>
      <td>505389.186</td>
      <td>599124.413</td>
      <td>965766.355</td>
    </tr>
  </tbody>
</table>
<p>321 rows × 33 columns</p>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Added a month column to dataframe so that processing data related to month will be easy
</span><span class="n">Data_copy</span><span class="p">[</span><span class="s">'month'</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DatetimeIndex</span><span class="p">(</span><span class="n">Data_copy</span><span class="p">[</span><span class="s">'Date'</span><span class="p">]).</span><span class="n">month</span>

<span class="n">m</span> <span class="o">=</span> <span class="n">Data_copy</span><span class="p">.</span><span class="n">pop</span><span class="p">(</span><span class="s">'month'</span><span class="p">)</span>

<span class="n">Data_copy</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="s">'month'</span><span class="p">,</span><span class="n">m</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Added a year column to dataframe so that processing data related to year will be easy
</span>
<span class="n">Data_copy</span><span class="p">[</span><span class="s">'Year'</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DatetimeIndex</span><span class="p">(</span><span class="n">Data_copy</span><span class="p">[</span><span class="s">'Date'</span><span class="p">]).</span><span class="n">year</span>
<span class="n">y</span> <span class="o">=</span> <span class="n">Data_copy</span><span class="p">.</span><span class="n">pop</span><span class="p">(</span><span class="s">'Year'</span><span class="p">)</span>
<span class="n">y</span>
<span class="n">Data_copy</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="s">'Year'</span><span class="p">,</span><span class="n">y</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Data_copy</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Date</th>
      <th>Year</th>
      <th>month</th>
      <th>Barking_&amp;_Dagenham</th>
      <th>Barnet</th>
      <th>Bexley</th>
      <th>Brent</th>
      <th>Bromley</th>
      <th>Camden</th>
      <th>Croydon</th>
      <th>...</th>
      <th>Merton</th>
      <th>Newham</th>
      <th>Redbridge</th>
      <th>Richmond_upon_Thames</th>
      <th>Southwark</th>
      <th>Sutton</th>
      <th>Tower_Hamlets</th>
      <th>Waltham_Forest</th>
      <th>Wandsworth</th>
      <th>Westminster</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>1</th>
      <td>1995-01-01</td>
      <td>1995</td>
      <td>1</td>
      <td>50460.227</td>
      <td>93284.518</td>
      <td>64958.09</td>
      <td>71306.567</td>
      <td>81671.477</td>
      <td>120932.888</td>
      <td>69158.162</td>
      <td>...</td>
      <td>82070.613</td>
      <td>53539.319</td>
      <td>72189.584</td>
      <td>109326.125</td>
      <td>67885.203</td>
      <td>71536.974</td>
      <td>59865.19</td>
      <td>61319.449</td>
      <td>88559.044</td>
      <td>133025.277</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1995-02-01</td>
      <td>1995</td>
      <td>2</td>
      <td>51085.78</td>
      <td>93190.17</td>
      <td>64787.921</td>
      <td>72022.262</td>
      <td>81657.559</td>
      <td>119508.862</td>
      <td>68951.095</td>
      <td>...</td>
      <td>79982.749</td>
      <td>53153.883</td>
      <td>72141.626</td>
      <td>111103.039</td>
      <td>64799.065</td>
      <td>70893.209</td>
      <td>62318.534</td>
      <td>60252.122</td>
      <td>88641.017</td>
      <td>131468.31</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1995-03-01</td>
      <td>1995</td>
      <td>3</td>
      <td>51268.97</td>
      <td>92247.524</td>
      <td>64367.493</td>
      <td>72015.763</td>
      <td>81449.311</td>
      <td>120282.213</td>
      <td>68712.443</td>
      <td>...</td>
      <td>80661.683</td>
      <td>53458.264</td>
      <td>72501.355</td>
      <td>107325.474</td>
      <td>65763.297</td>
      <td>70306.838</td>
      <td>63938.677</td>
      <td>60871.085</td>
      <td>87124.815</td>
      <td>132260.342</td>
    </tr>
    <tr>
      <th>4</th>
      <td>1995-04-01</td>
      <td>1995</td>
      <td>4</td>
      <td>53133.505</td>
      <td>90762.875</td>
      <td>64277.669</td>
      <td>72965.631</td>
      <td>81124.412</td>
      <td>120097.899</td>
      <td>68610.046</td>
      <td>...</td>
      <td>79990.543</td>
      <td>54479.754</td>
      <td>72228.603</td>
      <td>106875</td>
      <td>63073.621</td>
      <td>69411.944</td>
      <td>66233.194</td>
      <td>60971.397</td>
      <td>87026.002</td>
      <td>133370.204</td>
    </tr>
    <tr>
      <th>5</th>
      <td>1995-05-01</td>
      <td>1995</td>
      <td>5</td>
      <td>53042.249</td>
      <td>90258.0</td>
      <td>63997.136</td>
      <td>73704.047</td>
      <td>81542.616</td>
      <td>119929.278</td>
      <td>68844.917</td>
      <td>...</td>
      <td>80873.986</td>
      <td>55803.96</td>
      <td>72366.641</td>
      <td>107707.68</td>
      <td>64420.499</td>
      <td>69759.22</td>
      <td>66432.858</td>
      <td>61494.169</td>
      <td>86518.059</td>
      <td>133911.112</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>317</th>
      <td>2021-05-01</td>
      <td>2021</td>
      <td>5</td>
      <td>312430.653</td>
      <td>533319.35</td>
      <td>361919.178</td>
      <td>506917.307</td>
      <td>464872.548</td>
      <td>811080.363</td>
      <td>391236.913</td>
      <td>...</td>
      <td>540692.29</td>
      <td>380125.62</td>
      <td>451935.951</td>
      <td>701319.953</td>
      <td>507543.074</td>
      <td>395317.852</td>
      <td>438160.387</td>
      <td>476898.285</td>
      <td>600170.42</td>
      <td>908209.321</td>
    </tr>
    <tr>
      <th>318</th>
      <td>2021-06-01</td>
      <td>2021</td>
      <td>6</td>
      <td>317234.735</td>
      <td>541296.783</td>
      <td>364464.187</td>
      <td>514055.899</td>
      <td>470431.417</td>
      <td>814571.246</td>
      <td>393198.407</td>
      <td>...</td>
      <td>541278.331</td>
      <td>382971.011</td>
      <td>455605.548</td>
      <td>698800.896</td>
      <td>507753.747</td>
      <td>396832.698</td>
      <td>441463.011</td>
      <td>474203.82</td>
      <td>602200.028</td>
      <td>888342.854</td>
    </tr>
    <tr>
      <th>319</th>
      <td>2021-07-01</td>
      <td>2021</td>
      <td>7</td>
      <td>319549.93</td>
      <td>536012.669</td>
      <td>366451.639</td>
      <td>528684.055</td>
      <td>466447.004</td>
      <td>906099.2</td>
      <td>389730.086</td>
      <td>...</td>
      <td>544610.4</td>
      <td>366701.669</td>
      <td>461489.598</td>
      <td>719159.046</td>
      <td>519188.469</td>
      <td>401044.143</td>
      <td>459966.726</td>
      <td>493007.748</td>
      <td>602540.242</td>
      <td>922331.022</td>
    </tr>
    <tr>
      <th>320</th>
      <td>2021-08-01</td>
      <td>2021</td>
      <td>8</td>
      <td>322496.375</td>
      <td>544558.807</td>
      <td>373547.295</td>
      <td>533696.39</td>
      <td>473570.356</td>
      <td>921525.014</td>
      <td>393245.781</td>
      <td>...</td>
      <td>559114.797</td>
      <td>379482.69</td>
      <td>470113.184</td>
      <td>736113.028</td>
      <td>534447.284</td>
      <td>401378.723</td>
      <td>466570.526</td>
      <td>502104.81</td>
      <td>614932.295</td>
      <td>1016725.048</td>
    </tr>
    <tr>
      <th>321</th>
      <td>2021-09-01</td>
      <td>2021</td>
      <td>9</td>
      <td>329287.292</td>
      <td>533093.293</td>
      <td>375156.155</td>
      <td>542095.334</td>
      <td>483955.024</td>
      <td>895902.435</td>
      <td>391878.875</td>
      <td>...</td>
      <td>555225.54</td>
      <td>365357.143</td>
      <td>480339.944</td>
      <td>735675.219</td>
      <td>536755.525</td>
      <td>415227.665</td>
      <td>440846.736</td>
      <td>505389.186</td>
      <td>599124.413</td>
      <td>965766.355</td>
    </tr>
  </tbody>
</table>
<p>321 rows × 35 columns</p>
</div>

<p><strong>2.4.Transforming the data</strong></p>

<p>You might need to <strong>melt</strong> your DataFrame here.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Reshape dataframe to work on data easier
</span><span class="n">Data_copy</span>
<span class="n">mdata</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">melt</span><span class="p">(</span><span class="n">Data_copy</span><span class="p">,</span><span class="n">id_vars</span><span class="o">=</span><span class="p">[</span><span class="s">'Date'</span><span class="p">,</span><span class="s">'Year'</span><span class="p">,</span><span class="s">'month'</span><span class="p">],</span><span class="n">var_name</span><span class="o">=</span><span class="s">"London_Boroughs"</span><span class="p">,</span><span class="n">value_name</span><span class="o">=</span><span class="s">"Price"</span><span class="p">)</span>

<span class="n">mdata</span><span class="p">.</span><span class="n">info</span><span class="p">()</span>
<span class="n">mdata</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 10272 entries, 0 to 10271
Data columns (total 5 columns):
 #   Column           Non-Null Count  Dtype         
---  ------           --------------  -----         
 0   Date             10272 non-null  datetime64[ns]
 1   Year             10272 non-null  int64         
 2   month            10272 non-null  int64         
 3   London_Boroughs  10272 non-null  object        
 4   Price            10272 non-null  float64       
dtypes: datetime64[ns](1), float64(1), int64(2), object(1)
memory usage: 401.4+ KB
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Date</th>
      <th>Year</th>
      <th>month</th>
      <th>London_Boroughs</th>
      <th>Price</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1995-01-01</td>
      <td>1995</td>
      <td>1</td>
      <td>Barking_&amp;_Dagenham</td>
      <td>5.046e+04</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1995-02-01</td>
      <td>1995</td>
      <td>2</td>
      <td>Barking_&amp;_Dagenham</td>
      <td>5.109e+04</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1995-03-01</td>
      <td>1995</td>
      <td>3</td>
      <td>Barking_&amp;_Dagenham</td>
      <td>5.127e+04</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1995-04-01</td>
      <td>1995</td>
      <td>4</td>
      <td>Barking_&amp;_Dagenham</td>
      <td>5.313e+04</td>
    </tr>
    <tr>
      <th>4</th>
      <td>1995-05-01</td>
      <td>1995</td>
      <td>5</td>
      <td>Barking_&amp;_Dagenham</td>
      <td>5.304e+04</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>10267</th>
      <td>2021-05-01</td>
      <td>2021</td>
      <td>5</td>
      <td>Westminster</td>
      <td>9.082e+05</td>
    </tr>
    <tr>
      <th>10268</th>
      <td>2021-06-01</td>
      <td>2021</td>
      <td>6</td>
      <td>Westminster</td>
      <td>8.883e+05</td>
    </tr>
    <tr>
      <th>10269</th>
      <td>2021-07-01</td>
      <td>2021</td>
      <td>7</td>
      <td>Westminster</td>
      <td>9.223e+05</td>
    </tr>
    <tr>
      <th>10270</th>
      <td>2021-08-01</td>
      <td>2021</td>
      <td>8</td>
      <td>Westminster</td>
      <td>1.017e+06</td>
    </tr>
    <tr>
      <th>10271</th>
      <td>2021-09-01</td>
      <td>2021</td>
      <td>9</td>
      <td>Westminster</td>
      <td>9.658e+05</td>
    </tr>
  </tbody>
</table>
<p>10272 rows × 5 columns</p>
</div>

<p>Remember to make sure your column data types are all correct. Average prices, for example, should be floating point numbers…</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># price data type chamge to folat
</span><span class="n">mdata</span><span class="p">[</span><span class="s">'Price'</span><span class="p">]</span> <span class="o">=</span> <span class="n">mdata</span><span class="p">[</span><span class="s">'Price'</span><span class="p">].</span><span class="n">astype</span><span class="p">(</span><span class="s">'float'</span><span class="p">)</span>
</code></pre></div></div>

<p><strong>2.5. Cleaning the data (part 3)</strong></p>

<p>Do we have an equal number of observations in the ID, Average Price, Month, and London Borough columns? Remember that there are only 32 London Boroughs. How many entries do you have in that column?</p>

<p>Check out the contents of the London Borough column, and if you find null values, get rid of them however you see fit.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># # Deleting non-related columns in Dataframe
# Since there only 32 London Boroughs, the rest needs to be removed as follow
</span><span class="n">Data_copy</span><span class="p">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'Inner_London'</span><span class="p">,</span> <span class="s">'Outer_London'</span><span class="p">,</span> <span class="s">'NORTH_EAST'</span><span class="p">,</span>
       <span class="s">'NORTH_WEST'</span><span class="p">,</span> <span class="s">'YORKS_&amp;_THE_HUMBER'</span><span class="p">,</span> <span class="s">'EAST_MIDLANDS'</span><span class="p">,</span> <span class="s">'WEST_MIDLANDS'</span><span class="p">,</span>
       <span class="s">'EAST_OF_ENGLAND'</span><span class="p">,</span> <span class="s">'LONDON'</span><span class="p">,</span> <span class="s">'SOUTH_EAST'</span><span class="p">,</span> <span class="s">'SOUTH_WEST'</span><span class="p">,</span> <span class="s">'City_of_London'</span><span class="p">,</span><span class="s">'England'</span><span class="p">],</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="c1"># Deleting columns whoes all values are NaN
</span><span class="n">Data_copy</span><span class="p">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'Unnamed:_34'</span><span class="p">,</span><span class="s">'Unnamed:_37'</span><span class="p">,</span> <span class="s">'Unnamed:_47'</span><span class="p">],</span><span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Index(['Date', 'Year', 'month', 'Barking_&amp;_Dagenham', 'Barnet', 'Bexley',
       'Brent', 'Bromley', 'Camden', 'Croydon', 'Ealing', 'Enfield',
       'Greenwich', 'Hackney', 'Hammersmith_&amp;_Fulham', 'Haringey', 'Harrow',
       'Havering', 'Hillingdon', 'Hounslow', 'Islington',
       'Kensington_&amp;_Chelsea', 'Kingston_upon_Thames', 'Lambeth', 'Lewisham',
       'Merton', 'Newham', 'Redbridge', 'Richmond_upon_Thames', 'Southwark',
       'Sutton', 'Tower_Hamlets', 'Waltham_Forest', 'Wandsworth',
       'Westminster'],
      dtype='object')
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mdata</span><span class="p">[</span><span class="n">mdata</span><span class="p">.</span><span class="n">Price</span><span class="o">&gt;</span><span class="mi">1000000</span><span class="p">].</span><span class="n">head</span><span class="p">(</span><span class="mi">144</span><span class="p">)</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Date</th>
      <th>Year</th>
      <th>month</th>
      <th>London_Boroughs</th>
      <th>Price</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>5987</th>
      <td>2012-06-01</td>
      <td>2012</td>
      <td>6</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.031e+06</td>
    </tr>
    <tr>
      <th>5988</th>
      <td>2012-07-01</td>
      <td>2012</td>
      <td>7</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.033e+06</td>
    </tr>
    <tr>
      <th>5989</th>
      <td>2012-08-01</td>
      <td>2012</td>
      <td>8</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.043e+06</td>
    </tr>
    <tr>
      <th>5990</th>
      <td>2012-09-01</td>
      <td>2012</td>
      <td>9</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.058e+06</td>
    </tr>
    <tr>
      <th>5991</th>
      <td>2012-10-01</td>
      <td>2012</td>
      <td>10</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.077e+06</td>
    </tr>
    <tr>
      <th>5992</th>
      <td>2012-11-01</td>
      <td>2012</td>
      <td>11</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.072e+06</td>
    </tr>
    <tr>
      <th>5993</th>
      <td>2012-12-01</td>
      <td>2012</td>
      <td>12</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.045e+06</td>
    </tr>
    <tr>
      <th>5994</th>
      <td>2013-01-01</td>
      <td>2013</td>
      <td>1</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.068e+06</td>
    </tr>
    <tr>
      <th>5995</th>
      <td>2013-02-01</td>
      <td>2013</td>
      <td>2</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.061e+06</td>
    </tr>
    <tr>
      <th>5996</th>
      <td>2013-03-01</td>
      <td>2013</td>
      <td>3</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.076e+06</td>
    </tr>
    <tr>
      <th>5997</th>
      <td>2013-04-01</td>
      <td>2013</td>
      <td>4</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.043e+06</td>
    </tr>
    <tr>
      <th>5998</th>
      <td>2013-05-01</td>
      <td>2013</td>
      <td>5</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.087e+06</td>
    </tr>
    <tr>
      <th>5999</th>
      <td>2013-06-01</td>
      <td>2013</td>
      <td>6</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.122e+06</td>
    </tr>
    <tr>
      <th>6000</th>
      <td>2013-07-01</td>
      <td>2013</td>
      <td>7</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.160e+06</td>
    </tr>
    <tr>
      <th>6001</th>
      <td>2013-08-01</td>
      <td>2013</td>
      <td>8</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.189e+06</td>
    </tr>
    <tr>
      <th>6002</th>
      <td>2013-09-01</td>
      <td>2013</td>
      <td>9</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.218e+06</td>
    </tr>
    <tr>
      <th>6003</th>
      <td>2013-10-01</td>
      <td>2013</td>
      <td>10</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.173e+06</td>
    </tr>
    <tr>
      <th>6004</th>
      <td>2013-11-01</td>
      <td>2013</td>
      <td>11</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.169e+06</td>
    </tr>
    <tr>
      <th>6005</th>
      <td>2013-12-01</td>
      <td>2013</td>
      <td>12</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.154e+06</td>
    </tr>
    <tr>
      <th>6006</th>
      <td>2014-01-01</td>
      <td>2014</td>
      <td>1</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.205e+06</td>
    </tr>
    <tr>
      <th>6007</th>
      <td>2014-02-01</td>
      <td>2014</td>
      <td>2</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.198e+06</td>
    </tr>
    <tr>
      <th>6008</th>
      <td>2014-03-01</td>
      <td>2014</td>
      <td>3</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.210e+06</td>
    </tr>
    <tr>
      <th>6009</th>
      <td>2014-04-01</td>
      <td>2014</td>
      <td>4</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.231e+06</td>
    </tr>
    <tr>
      <th>6010</th>
      <td>2014-05-01</td>
      <td>2014</td>
      <td>5</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.263e+06</td>
    </tr>
    <tr>
      <th>6011</th>
      <td>2014-06-01</td>
      <td>2014</td>
      <td>6</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.298e+06</td>
    </tr>
    <tr>
      <th>6012</th>
      <td>2014-07-01</td>
      <td>2014</td>
      <td>7</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.346e+06</td>
    </tr>
    <tr>
      <th>6013</th>
      <td>2014-08-01</td>
      <td>2014</td>
      <td>8</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.347e+06</td>
    </tr>
    <tr>
      <th>6014</th>
      <td>2014-09-01</td>
      <td>2014</td>
      <td>9</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.344e+06</td>
    </tr>
    <tr>
      <th>6015</th>
      <td>2014-10-01</td>
      <td>2014</td>
      <td>10</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.334e+06</td>
    </tr>
    <tr>
      <th>6016</th>
      <td>2014-11-01</td>
      <td>2014</td>
      <td>11</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.365e+06</td>
    </tr>
    <tr>
      <th>6017</th>
      <td>2014-12-01</td>
      <td>2014</td>
      <td>12</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.319e+06</td>
    </tr>
    <tr>
      <th>6018</th>
      <td>2015-01-01</td>
      <td>2015</td>
      <td>1</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.313e+06</td>
    </tr>
    <tr>
      <th>6019</th>
      <td>2015-02-01</td>
      <td>2015</td>
      <td>2</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.288e+06</td>
    </tr>
    <tr>
      <th>6020</th>
      <td>2015-03-01</td>
      <td>2015</td>
      <td>3</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.307e+06</td>
    </tr>
    <tr>
      <th>6021</th>
      <td>2015-04-01</td>
      <td>2015</td>
      <td>4</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.292e+06</td>
    </tr>
    <tr>
      <th>6022</th>
      <td>2015-05-01</td>
      <td>2015</td>
      <td>5</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.306e+06</td>
    </tr>
    <tr>
      <th>6023</th>
      <td>2015-06-01</td>
      <td>2015</td>
      <td>6</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.293e+06</td>
    </tr>
    <tr>
      <th>6024</th>
      <td>2015-07-01</td>
      <td>2015</td>
      <td>7</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.328e+06</td>
    </tr>
    <tr>
      <th>6025</th>
      <td>2015-08-01</td>
      <td>2015</td>
      <td>8</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.316e+06</td>
    </tr>
    <tr>
      <th>6026</th>
      <td>2015-09-01</td>
      <td>2015</td>
      <td>9</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.354e+06</td>
    </tr>
    <tr>
      <th>6027</th>
      <td>2015-10-01</td>
      <td>2015</td>
      <td>10</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.269e+06</td>
    </tr>
    <tr>
      <th>6028</th>
      <td>2015-11-01</td>
      <td>2015</td>
      <td>11</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.295e+06</td>
    </tr>
    <tr>
      <th>6029</th>
      <td>2015-12-01</td>
      <td>2015</td>
      <td>12</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.265e+06</td>
    </tr>
    <tr>
      <th>6030</th>
      <td>2016-01-01</td>
      <td>2016</td>
      <td>1</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.335e+06</td>
    </tr>
    <tr>
      <th>6031</th>
      <td>2016-02-01</td>
      <td>2016</td>
      <td>2</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.295e+06</td>
    </tr>
    <tr>
      <th>6032</th>
      <td>2016-03-01</td>
      <td>2016</td>
      <td>3</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.319e+06</td>
    </tr>
    <tr>
      <th>6033</th>
      <td>2016-04-01</td>
      <td>2016</td>
      <td>4</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.303e+06</td>
    </tr>
    <tr>
      <th>6034</th>
      <td>2016-05-01</td>
      <td>2016</td>
      <td>5</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.283e+06</td>
    </tr>
    <tr>
      <th>6035</th>
      <td>2016-06-01</td>
      <td>2016</td>
      <td>6</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.246e+06</td>
    </tr>
    <tr>
      <th>6036</th>
      <td>2016-07-01</td>
      <td>2016</td>
      <td>7</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.230e+06</td>
    </tr>
    <tr>
      <th>6037</th>
      <td>2016-08-01</td>
      <td>2016</td>
      <td>8</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.207e+06</td>
    </tr>
    <tr>
      <th>6038</th>
      <td>2016-09-01</td>
      <td>2016</td>
      <td>9</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.227e+06</td>
    </tr>
    <tr>
      <th>6039</th>
      <td>2016-10-01</td>
      <td>2016</td>
      <td>10</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.218e+06</td>
    </tr>
    <tr>
      <th>6040</th>
      <td>2016-11-01</td>
      <td>2016</td>
      <td>11</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.295e+06</td>
    </tr>
    <tr>
      <th>6041</th>
      <td>2016-12-01</td>
      <td>2016</td>
      <td>12</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.357e+06</td>
    </tr>
    <tr>
      <th>6042</th>
      <td>2017-01-01</td>
      <td>2017</td>
      <td>1</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.394e+06</td>
    </tr>
    <tr>
      <th>6043</th>
      <td>2017-02-01</td>
      <td>2017</td>
      <td>2</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.412e+06</td>
    </tr>
    <tr>
      <th>6044</th>
      <td>2017-03-01</td>
      <td>2017</td>
      <td>3</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.380e+06</td>
    </tr>
    <tr>
      <th>6045</th>
      <td>2017-04-01</td>
      <td>2017</td>
      <td>4</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.400e+06</td>
    </tr>
    <tr>
      <th>6046</th>
      <td>2017-05-01</td>
      <td>2017</td>
      <td>5</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.388e+06</td>
    </tr>
    <tr>
      <th>6047</th>
      <td>2017-06-01</td>
      <td>2017</td>
      <td>6</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.341e+06</td>
    </tr>
    <tr>
      <th>6048</th>
      <td>2017-07-01</td>
      <td>2017</td>
      <td>7</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.304e+06</td>
    </tr>
    <tr>
      <th>6049</th>
      <td>2017-08-01</td>
      <td>2017</td>
      <td>8</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.258e+06</td>
    </tr>
    <tr>
      <th>6050</th>
      <td>2017-09-01</td>
      <td>2017</td>
      <td>9</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.270e+06</td>
    </tr>
    <tr>
      <th>6051</th>
      <td>2017-10-01</td>
      <td>2017</td>
      <td>10</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.278e+06</td>
    </tr>
    <tr>
      <th>6052</th>
      <td>2017-11-01</td>
      <td>2017</td>
      <td>11</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.344e+06</td>
    </tr>
    <tr>
      <th>6053</th>
      <td>2017-12-01</td>
      <td>2017</td>
      <td>12</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.364e+06</td>
    </tr>
    <tr>
      <th>6054</th>
      <td>2018-01-01</td>
      <td>2018</td>
      <td>1</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.463e+06</td>
    </tr>
    <tr>
      <th>6055</th>
      <td>2018-02-01</td>
      <td>2018</td>
      <td>2</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.379e+06</td>
    </tr>
    <tr>
      <th>6056</th>
      <td>2018-03-01</td>
      <td>2018</td>
      <td>3</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.393e+06</td>
    </tr>
    <tr>
      <th>6057</th>
      <td>2018-04-01</td>
      <td>2018</td>
      <td>4</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.325e+06</td>
    </tr>
    <tr>
      <th>6058</th>
      <td>2018-05-01</td>
      <td>2018</td>
      <td>5</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.302e+06</td>
    </tr>
    <tr>
      <th>6059</th>
      <td>2018-06-01</td>
      <td>2018</td>
      <td>6</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.307e+06</td>
    </tr>
    <tr>
      <th>6060</th>
      <td>2018-07-01</td>
      <td>2018</td>
      <td>7</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.335e+06</td>
    </tr>
    <tr>
      <th>6061</th>
      <td>2018-08-01</td>
      <td>2018</td>
      <td>8</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.418e+06</td>
    </tr>
    <tr>
      <th>6062</th>
      <td>2018-09-01</td>
      <td>2018</td>
      <td>9</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.388e+06</td>
    </tr>
    <tr>
      <th>6063</th>
      <td>2018-10-01</td>
      <td>2018</td>
      <td>10</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.348e+06</td>
    </tr>
    <tr>
      <th>6064</th>
      <td>2018-11-01</td>
      <td>2018</td>
      <td>11</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.363e+06</td>
    </tr>
    <tr>
      <th>6065</th>
      <td>2018-12-01</td>
      <td>2018</td>
      <td>12</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.346e+06</td>
    </tr>
    <tr>
      <th>6066</th>
      <td>2019-01-01</td>
      <td>2019</td>
      <td>1</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.285e+06</td>
    </tr>
    <tr>
      <th>6067</th>
      <td>2019-02-01</td>
      <td>2019</td>
      <td>2</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.260e+06</td>
    </tr>
    <tr>
      <th>6068</th>
      <td>2019-03-01</td>
      <td>2019</td>
      <td>3</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.219e+06</td>
    </tr>
    <tr>
      <th>6069</th>
      <td>2019-04-01</td>
      <td>2019</td>
      <td>4</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.265e+06</td>
    </tr>
    <tr>
      <th>6070</th>
      <td>2019-05-01</td>
      <td>2019</td>
      <td>5</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.234e+06</td>
    </tr>
    <tr>
      <th>6071</th>
      <td>2019-06-01</td>
      <td>2019</td>
      <td>6</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.292e+06</td>
    </tr>
    <tr>
      <th>6072</th>
      <td>2019-07-01</td>
      <td>2019</td>
      <td>7</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.275e+06</td>
    </tr>
    <tr>
      <th>6073</th>
      <td>2019-08-01</td>
      <td>2019</td>
      <td>8</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.249e+06</td>
    </tr>
    <tr>
      <th>6074</th>
      <td>2019-09-01</td>
      <td>2019</td>
      <td>9</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.230e+06</td>
    </tr>
    <tr>
      <th>6075</th>
      <td>2019-10-01</td>
      <td>2019</td>
      <td>10</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.190e+06</td>
    </tr>
    <tr>
      <th>6076</th>
      <td>2019-11-01</td>
      <td>2019</td>
      <td>11</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.172e+06</td>
    </tr>
    <tr>
      <th>6077</th>
      <td>2019-12-01</td>
      <td>2019</td>
      <td>12</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.227e+06</td>
    </tr>
    <tr>
      <th>6078</th>
      <td>2020-01-01</td>
      <td>2020</td>
      <td>1</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.250e+06</td>
    </tr>
    <tr>
      <th>6079</th>
      <td>2020-02-01</td>
      <td>2020</td>
      <td>2</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.319e+06</td>
    </tr>
    <tr>
      <th>6080</th>
      <td>2020-03-01</td>
      <td>2020</td>
      <td>3</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.344e+06</td>
    </tr>
    <tr>
      <th>6081</th>
      <td>2020-04-01</td>
      <td>2020</td>
      <td>4</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.367e+06</td>
    </tr>
    <tr>
      <th>6082</th>
      <td>2020-05-01</td>
      <td>2020</td>
      <td>5</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.353e+06</td>
    </tr>
    <tr>
      <th>6083</th>
      <td>2020-06-01</td>
      <td>2020</td>
      <td>6</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.301e+06</td>
    </tr>
    <tr>
      <th>6084</th>
      <td>2020-07-01</td>
      <td>2020</td>
      <td>7</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.321e+06</td>
    </tr>
    <tr>
      <th>6085</th>
      <td>2020-08-01</td>
      <td>2020</td>
      <td>8</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.344e+06</td>
    </tr>
    <tr>
      <th>6086</th>
      <td>2020-09-01</td>
      <td>2020</td>
      <td>9</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.348e+06</td>
    </tr>
    <tr>
      <th>6087</th>
      <td>2020-10-01</td>
      <td>2020</td>
      <td>10</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.303e+06</td>
    </tr>
    <tr>
      <th>6088</th>
      <td>2020-11-01</td>
      <td>2020</td>
      <td>11</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.315e+06</td>
    </tr>
    <tr>
      <th>6089</th>
      <td>2020-12-01</td>
      <td>2020</td>
      <td>12</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.350e+06</td>
    </tr>
    <tr>
      <th>6090</th>
      <td>2021-01-01</td>
      <td>2021</td>
      <td>1</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.337e+06</td>
    </tr>
    <tr>
      <th>6091</th>
      <td>2021-02-01</td>
      <td>2021</td>
      <td>2</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.257e+06</td>
    </tr>
    <tr>
      <th>6092</th>
      <td>2021-03-01</td>
      <td>2021</td>
      <td>3</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.207e+06</td>
    </tr>
    <tr>
      <th>6093</th>
      <td>2021-04-01</td>
      <td>2021</td>
      <td>4</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.190e+06</td>
    </tr>
    <tr>
      <th>6094</th>
      <td>2021-05-01</td>
      <td>2021</td>
      <td>5</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.223e+06</td>
    </tr>
    <tr>
      <th>6095</th>
      <td>2021-06-01</td>
      <td>2021</td>
      <td>6</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.231e+06</td>
    </tr>
    <tr>
      <th>6096</th>
      <td>2021-07-01</td>
      <td>2021</td>
      <td>7</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.322e+06</td>
    </tr>
    <tr>
      <th>6097</th>
      <td>2021-08-01</td>
      <td>2021</td>
      <td>8</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.397e+06</td>
    </tr>
    <tr>
      <th>6098</th>
      <td>2021-09-01</td>
      <td>2021</td>
      <td>9</td>
      <td>Kensington_&amp;_Chelsea</td>
      <td>1.386e+06</td>
    </tr>
    <tr>
      <th>10201</th>
      <td>2015-11-01</td>
      <td>2015</td>
      <td>11</td>
      <td>Westminster</td>
      <td>1.013e+06</td>
    </tr>
    <tr>
      <th>10202</th>
      <td>2015-12-01</td>
      <td>2015</td>
      <td>12</td>
      <td>Westminster</td>
      <td>1.013e+06</td>
    </tr>
    <tr>
      <th>10203</th>
      <td>2016-01-01</td>
      <td>2016</td>
      <td>1</td>
      <td>Westminster</td>
      <td>1.024e+06</td>
    </tr>
    <tr>
      <th>10207</th>
      <td>2016-05-01</td>
      <td>2016</td>
      <td>5</td>
      <td>Westminster</td>
      <td>1.007e+06</td>
    </tr>
    <tr>
      <th>10208</th>
      <td>2016-06-01</td>
      <td>2016</td>
      <td>6</td>
      <td>Westminster</td>
      <td>1.017e+06</td>
    </tr>
    <tr>
      <th>10209</th>
      <td>2016-07-01</td>
      <td>2016</td>
      <td>7</td>
      <td>Westminster</td>
      <td>1.025e+06</td>
    </tr>
    <tr>
      <th>10214</th>
      <td>2016-12-01</td>
      <td>2016</td>
      <td>12</td>
      <td>Westminster</td>
      <td>1.030e+06</td>
    </tr>
    <tr>
      <th>10215</th>
      <td>2017-01-01</td>
      <td>2017</td>
      <td>1</td>
      <td>Westminster</td>
      <td>1.040e+06</td>
    </tr>
    <tr>
      <th>10216</th>
      <td>2017-02-01</td>
      <td>2017</td>
      <td>2</td>
      <td>Westminster</td>
      <td>1.074e+06</td>
    </tr>
    <tr>
      <th>10217</th>
      <td>2017-03-01</td>
      <td>2017</td>
      <td>3</td>
      <td>Westminster</td>
      <td>1.061e+06</td>
    </tr>
    <tr>
      <th>10218</th>
      <td>2017-04-01</td>
      <td>2017</td>
      <td>4</td>
      <td>Westminster</td>
      <td>1.109e+06</td>
    </tr>
    <tr>
      <th>10219</th>
      <td>2017-05-01</td>
      <td>2017</td>
      <td>5</td>
      <td>Westminster</td>
      <td>1.099e+06</td>
    </tr>
    <tr>
      <th>10220</th>
      <td>2017-06-01</td>
      <td>2017</td>
      <td>6</td>
      <td>Westminster</td>
      <td>1.088e+06</td>
    </tr>
    <tr>
      <th>10221</th>
      <td>2017-07-01</td>
      <td>2017</td>
      <td>7</td>
      <td>Westminster</td>
      <td>1.059e+06</td>
    </tr>
    <tr>
      <th>10222</th>
      <td>2017-08-01</td>
      <td>2017</td>
      <td>8</td>
      <td>Westminster</td>
      <td>1.036e+06</td>
    </tr>
    <tr>
      <th>10223</th>
      <td>2017-09-01</td>
      <td>2017</td>
      <td>9</td>
      <td>Westminster</td>
      <td>1.041e+06</td>
    </tr>
    <tr>
      <th>10224</th>
      <td>2017-10-01</td>
      <td>2017</td>
      <td>10</td>
      <td>Westminster</td>
      <td>1.035e+06</td>
    </tr>
    <tr>
      <th>10225</th>
      <td>2017-11-01</td>
      <td>2017</td>
      <td>11</td>
      <td>Westminster</td>
      <td>1.040e+06</td>
    </tr>
    <tr>
      <th>10226</th>
      <td>2017-12-01</td>
      <td>2017</td>
      <td>12</td>
      <td>Westminster</td>
      <td>1.096e+06</td>
    </tr>
    <tr>
      <th>10227</th>
      <td>2018-01-01</td>
      <td>2018</td>
      <td>1</td>
      <td>Westminster</td>
      <td>1.116e+06</td>
    </tr>
    <tr>
      <th>10228</th>
      <td>2018-02-01</td>
      <td>2018</td>
      <td>2</td>
      <td>Westminster</td>
      <td>1.117e+06</td>
    </tr>
    <tr>
      <th>10229</th>
      <td>2018-03-01</td>
      <td>2018</td>
      <td>3</td>
      <td>Westminster</td>
      <td>1.061e+06</td>
    </tr>
    <tr>
      <th>10230</th>
      <td>2018-04-01</td>
      <td>2018</td>
      <td>4</td>
      <td>Westminster</td>
      <td>1.004e+06</td>
    </tr>
    <tr>
      <th>10235</th>
      <td>2018-09-01</td>
      <td>2018</td>
      <td>9</td>
      <td>Westminster</td>
      <td>1.023e+06</td>
    </tr>
    <tr>
      <th>10236</th>
      <td>2018-10-01</td>
      <td>2018</td>
      <td>10</td>
      <td>Westminster</td>
      <td>1.026e+06</td>
    </tr>
    <tr>
      <th>10237</th>
      <td>2018-11-01</td>
      <td>2018</td>
      <td>11</td>
      <td>Westminster</td>
      <td>1.030e+06</td>
    </tr>
    <tr>
      <th>10243</th>
      <td>2019-05-01</td>
      <td>2019</td>
      <td>5</td>
      <td>Westminster</td>
      <td>1.022e+06</td>
    </tr>
    <tr>
      <th>10251</th>
      <td>2020-01-01</td>
      <td>2020</td>
      <td>1</td>
      <td>Westminster</td>
      <td>1.009e+06</td>
    </tr>
    <tr>
      <th>10252</th>
      <td>2020-02-01</td>
      <td>2020</td>
      <td>2</td>
      <td>Westminster</td>
      <td>1.014e+06</td>
    </tr>
    <tr>
      <th>10253</th>
      <td>2020-03-01</td>
      <td>2020</td>
      <td>3</td>
      <td>Westminster</td>
      <td>1.007e+06</td>
    </tr>
    <tr>
      <th>10254</th>
      <td>2020-04-01</td>
      <td>2020</td>
      <td>4</td>
      <td>Westminster</td>
      <td>1.027e+06</td>
    </tr>
    <tr>
      <th>10270</th>
      <td>2021-08-01</td>
      <td>2021</td>
      <td>8</td>
      <td>Westminster</td>
      <td>1.017e+06</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>

</code></pre></div></div>

<p><strong>2.6. Visualizing the data</strong></p>

<p>To visualize the data, why not subset on a particular London Borough? Maybe do a line plot of Month against Average Price?</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">seaborn</span> <span class="k">as</span> <span class="n">sns</span>
<span class="kn">import</span> <span class="nn">matplotlib_inline</span>

</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Plotting Lonodn Boroughs house prices changes over years
</span>
<span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">16</span><span class="p">,</span><span class="mi">10</span><span class="p">))</span>

<span class="n">sns</span><span class="p">.</span><span class="n">scatterplot</span><span class="p">(</span><span class="n">mdata</span><span class="p">.</span><span class="n">Date</span><span class="p">,</span><span class="n">mdata</span><span class="p">.</span><span class="n">Price</span><span class="p">,</span><span class="n">data</span><span class="o">=</span><span class="n">mdata</span><span class="p">,</span> <span class="n">hue</span> <span class="o">=</span><span class="s">'London_Boroughs'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">legend</span><span class="p">(</span><span class="n">bbox_to_anchor</span><span class="o">=</span><span class="p">(</span><span class="mf">1.02</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span> <span class="n">loc</span><span class="o">=</span><span class="s">'upper left'</span><span class="p">,</span> <span class="n">borderaxespad</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>

<span class="c1"># Set x-axis label
</span><span class="n">plt</span><span class="p">.</span><span class="n">xlabel</span><span class="p">(</span><span class="s">'Date (Year)'</span><span class="p">)</span>
<span class="c1"># Set y-axis label
</span><span class="n">plt</span><span class="p">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'Price (million)'</span><span class="p">)</span>

</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/Users/ckaplan/anaconda3/lib/python3.9/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.
  warnings.warn(





Text(0, 0.5, 'Price (million)')
</code></pre></div></div>

<p><img src="Capstone_1_files/Capstone_1_48_2.png" alt="png" /></p>

<p>To limit the number of data points you have, you might want to extract the year from every month value your <em>Month</em> column.</p>

<p>To this end, you <em>could</em> apply a <strong><em>lambda function</em></strong>. Your logic could work as follows:</p>
<ol>
  <li>look through the <code class="language-plaintext highlighter-rouge">Month</code> column</li>
  <li>extract the year from each individual value in that column</li>
  <li>store that corresponding year as separate column.</li>
</ol>

<p>Whether you go ahead with this is up to you. Just so long as you answer our initial brief: which boroughs of London have seen the greatest house price increase, on average, over the past two decades?</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 
# Average house price over years for Kensington_&amp;_Chelsea
</span><span class="n">mean</span> <span class="o">=</span> <span class="n">mdata</span><span class="p">[</span><span class="n">mdata</span><span class="p">.</span><span class="n">London_Boroughs</span> <span class="o">==</span><span class="s">'Kensington_&amp;_Chelsea'</span><span class="p">].</span><span class="n">Price</span><span class="p">.</span><span class="n">mean</span><span class="p">()</span>

<span class="c1"># Plottting Average house price channges over years for Kensington_&amp;_Chelsea against to average price
</span><span class="n">sns</span><span class="p">.</span><span class="n">relplot</span><span class="p">(</span>
    <span class="n">data</span><span class="o">=</span> <span class="n">mdata</span><span class="p">[</span><span class="n">mdata</span><span class="p">.</span><span class="n">London_Boroughs</span> <span class="o">==</span><span class="s">'Kensington_&amp;_Chelsea'</span><span class="p">],</span> <span class="n">kind</span><span class="o">=</span><span class="s">"line"</span><span class="p">,</span>
    <span class="n">x</span><span class="o">=</span><span class="s">"Date"</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">"Price"</span><span class="p">,</span>
<span class="n">aspect</span><span class="o">=</span><span class="mf">2.4</span>
<span class="p">).</span><span class="nb">set</span><span class="p">(</span>
    <span class="n">title</span><span class="o">=</span><span class="s">"Kensington_&amp;_Chelsea House Prices Against to Average Price"</span><span class="p">,</span> 
    <span class="n">ylabel</span><span class="o">=</span><span class="s">'Price (million)'</span><span class="p">,</span>
    <span class="n">xlabel</span><span class="o">=</span><span class="s">'Date (Year)'</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="n">hlines</span><span class="p">(</span><span class="n">mean</span><span class="p">,</span><span class="mi">9500</span><span class="p">,</span><span class="mi">19521</span><span class="p">,</span><span class="n">label</span><span class="o">=</span><span class="s">'Ave House Prices'</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;matplotlib.collections.LineCollection at 0x7fea8c16bb20&gt;
</code></pre></div></div>

<p><img src="Capstone_1_files/Capstone_1_50_1.png" alt="png" /></p>

<p><strong>3. Modeling</strong></p>

<p>Consider creating a function that will calculate a ratio of house prices, comparing the price of a house in 2018 to the price in 1998.</p>

<p>Consider calling this function create_price_ratio.</p>

<p>You’d want this function to:</p>
<ol>
  <li>Take a filter of dfg, specifically where this filter constrains the London_Borough, as an argument. For example, one admissible argument should be: dfg[dfg[‘London_Borough’]==’Camden’].</li>
  <li>Get the Average Price for that Borough, for the years 1998 and 2018.</li>
  <li>Calculate the ratio of the Average Price for 1998 divided by the Average Price for 2018.</li>
  <li>Return that ratio.</li>
</ol>

<p>Once you’ve written this function, you ultimately want to use it to iterate through all the unique London_Boroughs and work out the ratio capturing the difference of house prices between 1998 and 2018.</p>

<p>Bear in mind: you don’t have to write a function like this if you don’t want to. If you can solve the brief otherwise, then great!</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="n">Camden</span> <span class="o">=</span> <span class="n">mdata</span><span class="p">[</span><span class="n">mdata</span><span class="p">[</span><span class="s">'London_Boroughs'</span><span class="p">]</span><span class="o">==</span><span class="s">'Camden'</span><span class="p">]</span>

</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Calculating average price changes from 1998 to 2018
</span>
<span class="k">def</span> <span class="nf">create_price_ratio</span><span class="p">():</span>
    <span class="n">Camden</span><span class="p">[</span><span class="s">'1998'</span><span class="p">]</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">where</span><span class="p">(</span><span class="n">Camden</span><span class="p">[</span><span class="s">'Date'</span><span class="p">].</span><span class="n">between</span><span class="p">(</span><span class="s">'1/1/1998'</span><span class="p">,</span><span class="s">'12/1/1998'</span><span class="p">),</span><span class="s">'start'</span><span class="p">,</span><span class="s">'end'</span><span class="p">)</span>
    <span class="n">mean_1998</span> <span class="o">=</span> <span class="n">Camden</span><span class="p">[</span><span class="n">Camden</span><span class="p">[</span><span class="s">'1998'</span><span class="p">]</span><span class="o">==</span><span class="s">'start'</span><span class="p">].</span><span class="n">Price</span><span class="p">.</span><span class="n">mean</span><span class="p">()</span>
    <span class="n">Camden</span><span class="p">[</span><span class="s">'2018'</span><span class="p">]</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">where</span><span class="p">(</span><span class="n">Camden</span><span class="p">[</span><span class="s">'Date'</span><span class="p">].</span><span class="n">between</span><span class="p">(</span><span class="s">'1/1/2018'</span><span class="p">,</span><span class="s">'12/1/2018'</span><span class="p">),</span><span class="s">'start'</span><span class="p">,</span><span class="s">'end'</span><span class="p">)</span>
    <span class="n">mean_2018</span> <span class="o">=</span><span class="n">Camden</span><span class="p">[</span><span class="n">Camden</span><span class="p">[</span><span class="s">'2018'</span><span class="p">]</span><span class="o">==</span><span class="s">'start'</span><span class="p">].</span><span class="n">Price</span><span class="p">.</span><span class="n">mean</span><span class="p">()</span>
    
    <span class="k">return</span> <span class="p">(</span><span class="n">mean_1998</span><span class="o">/</span><span class="n">mean_2018</span><span class="p">)</span><span class="o">*</span><span class="mi">100</span>

<span class="n">create_price_ratio</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/var/folders/4x/xkdl49053zn3t479xyy771lw0000gn/T/ipykernel_76089/3340549983.py:2: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  Camden['1998']=np.where(Camden['Date'].between('1/1/1998','12/1/1998'),'start','end')
/var/folders/4x/xkdl49053zn3t479xyy771lw0000gn/T/ipykernel_76089/3340549983.py:4: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  Camden['2018']=np.where(Camden['Date'].between('1/1/2018','12/1/2018'),'start','end')





20.26197350325254
</code></pre></div></div>

<h3 id="4-conclusion">4. Conclusion</h3>
<p>What can you conclude? Type out your conclusion below.</p>

<p>Look back at your notebook. Think about how you might summarize what you have done, and prepare a quick presentation on it to your mentor at your next meeting.</p>

<p>We hope you enjoyed this practical project. It should have consolidated your data hygiene and pandas skills by looking at a real-world problem involving just the kind of dataset you might encounter as a budding data scientist. Congratulations, and looking forward to seeing you at the next step in the course!</p>

<p><strong>Short Summary</strong></p>
<ul>
  <li>
    <p>From the data set, it is clear that iin 2009 the house prices decreases and then it increases again. 
Sharp deacreases in 2009 is most probably because of real estate crisis happened in the USA.</p>
  </li>
  <li>
    <p>Another observation is that house prices are not stable after 2016</p>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>]]></content><author><name>Jamal Kaplan</name></author><summary type="html"><![CDATA[Data Exploration Capstone Project]]></summary></entry><entry><title type="html">Man Here I made changes his is exploration at its greatest</title><link href="http://localhost:4000/2020/01/31/man-must-explore.html" rel="alternate" type="text/html" title="Man Here I made changes his is exploration at its greatest" /><published>2020-01-31T06:45:13-08:00</published><updated>2020-01-31T06:45:13-08:00</updated><id>http://localhost:4000/2020/01/31/man-must-explore</id><content type="html" xml:base="http://localhost:4000/2020/01/31/man-must-explore.html"><![CDATA[<p>Never in all their history have men been able truly to conceive of the world as one: a single sphere, a globe, having the qualities of a globe, a round earth in which all the directions eventually meet, in which there is no center because every point, or none, is center — an equal earth which all men occupy as equals. The airman's earth, if free men make it, will be truly round: a globe in practice, not in theory.</p>

<p>Science cuts two ways, of course; its products can be used for both good and evil. But there's no turning back from science. The early warnings about technological dangers also come from science.</p>

<p>What was most significant about the lunar voyage was not that man set foot on the Moon but that they set eye on the earth.</p>

<p>A Chinese tale tells of some men sent to harm a young girl who, upon seeing her beauty, become her protectors rather than her violators. That's how I felt seeing the Earth for the first time. I could not help but love and cherish her.</p>

<p>For those who have seen the Earth from space, and for the hundreds and perhaps thousands more who will, the experience most certainly changes your perspective. The things that we share in our world are far more valuable than those which divide us.</p>

<h2 class="section-heading">The Final Frontier</h2>

<p>There can be no thought of finishing for ‘aiming for the stars.’ Both figuratively and literally, it is a task to occupy the generations. And no matter how much progress one makes, there is always the thrill of just beginning.</p>

<p>There can be no thought of finishing for ‘aiming for the stars.’ Both figuratively and literally, it is a task to occupy the generations. And no matter how much progress one makes, there is always the thrill of just beginning.</p>

<blockquote class="blockquote">The dreams of yesterday are the hopes of today and the reality of tomorrow. Science has not yet mastered prophecy. We predict too much for the next year and yet far too little for the next ten.</blockquote>

<p>Spaceflights cannot be stopped. This is not the work of any one man or even a group of men. It is a historical process which mankind is carrying out in accordance with the natural laws of human development.</p>

<h2 class="section-heading">Reaching for the Stars</h2>

<p>As we got further and further away, it [the Earth] diminished in size. Finally it shrank to the size of a marble, the most beautiful you can imagine. That beautiful, warm, living object looked so fragile, so delicate, that if you touched it with a finger it would crumble and fall apart. Seeing this has to change a man.</p>

<img class="img-fluid" src="https://source.unsplash.com/Mn9Fa_wQH-M/800x450" alt="Demo Image">
<span class="caption text-muted">To go places and do things that have never been done before – that’s what living is all about.</span>

<p>Space, the final frontier. These are the voyages of the Starship Enterprise. Its five-year mission: to explore strange new worlds, to seek out new life and new civilizations, to boldly go where no man has gone before.</p>

<p>As I stand out here in the wonders of the unknown at Hadley, I sort of realize there’s a fundamental truth to our nature, Man must explore, and this is exploration at its greatest.</p>

<p>Placeholder text by <a href="http://spaceipsum.com/">Space Ipsum</a>. Photographs by <a href="https://unsplash.com/">Unsplash</a>.</p>]]></content><author><name>Jamal Kaplan</name></author><summary type="html"><![CDATA[Never in all their history have men been able truly to conceive of the world as one: a single sphere, a globe, having the qualities of a globe, a round earth in which all the directions eventually meet, in which there is no center because every point, or none, is center — an equal earth which all men occupy as equals. The airman's earth, if free men make it, will be truly round: a globe in practice, not in theory.]]></summary></entry><entry><title type="html">I believe every human has a finite number of heartbeats. I don’t intend to waste any of mine.</title><link href="http://localhost:4000/2020/01/30/heartbeats.html" rel="alternate" type="text/html" title="I believe every human has a finite number of heartbeats. I don’t intend to waste any of mine." /><published>2020-01-30T19:45:13-08:00</published><updated>2020-01-30T19:45:13-08:00</updated><id>http://localhost:4000/2020/01/30/heartbeats</id><content type="html" xml:base="http://localhost:4000/2020/01/30/heartbeats.html"><![CDATA[<p>Never in all their history have men been able truly to conceive of the world as one: a single sphere, a globe, having the qualities of a globe, a round earth in which all the directions eventually meet, in which there is no center because every point, or none, is center — an equal earth which all men occupy as equals. The airman's earth, if free men make it, will be truly round: a globe in practice, not in theory.</p>

<p>Science cuts two ways, of course; its products can be used for both good and evil. But there's no turning back from science. The early warnings about technological dangers also come from science.</p>

<p>What was most significant about the lunar voyage was not that man set foot on the Moon but that they set eye on the earth.</p>

<p>A Chinese tale tells of some men sent to harm a young girl who, upon seeing her beauty, become her protectors rather than her violators. That's how I felt seeing the Earth for the first time. I could not help but love and cherish her.</p>

<p>For those who have seen the Earth from space, and for the hundreds and perhaps thousands more who will, the experience most certainly changes your perspective. The things that we share in our world are far more valuable than those which divide us.</p>

<h2 class="section-heading">The Final Frontier</h2>

<p>There can be no thought of finishing for ‘aiming for the stars.’ Both figuratively and literally, it is a task to occupy the generations. And no matter how much progress one makes, there is always the thrill of just beginning.</p>

<p>There can be no thought of finishing for ‘aiming for the stars.’ Both figuratively and literally, it is a task to occupy the generations. And no matter how much progress one makes, there is always the thrill of just beginning.</p>

<blockquote class="blockquote">The dreams of yesterday are the hopes of today and the reality of tomorrow. Science has not yet mastered prophecy. We predict too much for the next year and yet far too little for the next ten.</blockquote>

<p>Spaceflights cannot be stopped. This is not the work of any one man or even a group of men. It is a historical process which mankind is carrying out in accordance with the natural laws of human development.</p>

<h2 class="section-heading">Reaching for the Stars</h2>

<p>As we got further and further away, it [the Earth] diminished in size. Finally it shrank to the size of a marble, the most beautiful you can imagine. That beautiful, warm, living object looked so fragile, so delicate, that if you touched it with a finger it would crumble and fall apart. Seeing this has to change a man.</p>

<img class="img-fluid" src="https://source.unsplash.com/Mn9Fa_wQH-M/800x450" alt="Demo Image">
<span class="caption text-muted">To go places and do things that have never been done before – that’s what living is all about.</span>

<p>Space, the final frontier. These are the voyages of the Starship Enterprise. Its five-year mission: to explore strange new worlds, to seek out new life and new civilizations, to boldly go where no man has gone before.</p>

<p>As I stand out here in the wonders of the unknown at Hadley, I sort of realize there’s a fundamental truth to our nature, Man must explore, and this is exploration at its greatest.</p>

<p>Placeholder text by <a href="http://spaceipsum.com/">Space Ipsum</a>. Photographs by <a href="https://unsplash.com/">Unsplash</a>.</p>]]></content><author><name>Jamal Kaplan</name></author><summary type="html"><![CDATA[Never in all their history have men been able truly to conceive of the world as one: a single sphere, a globe, having the qualities of a globe, a round earth in which all the directions eventually meet, in which there is no center because every point, or none, is center — an equal earth which all men occupy as equals. The airman's earth, if free men make it, will be truly round: a globe in practice, not in theory.]]></summary></entry><entry><title type="html">Science has not yet mastered prophecy</title><link href="http://localhost:4000/2020/01/29/prophecy.html" rel="alternate" type="text/html" title="Science has not yet mastered prophecy" /><published>2020-01-29T19:45:13-08:00</published><updated>2020-01-29T19:45:13-08:00</updated><id>http://localhost:4000/2020/01/29/prophecy</id><content type="html" xml:base="http://localhost:4000/2020/01/29/prophecy.html"><![CDATA[<p>Never in all their history have men been able truly to conceive of the world as one: a single sphere, a globe, having the qualities of a globe, a round earth in which all the directions eventually meet, in which there is no center because every point, or none, is center — an equal earth which all men occupy as equals. The airman's earth, if free men make it, will be truly round: a globe in practice, not in theory.</p>

<p>Science cuts two ways, of course; its products can be used for both good and evil. But there's no turning back from science. The early warnings about technological dangers also come from science.</p>

<p>What was most significant about the lunar voyage was not that man set foot on the Moon but that they set eye on the earth.</p>

<p>A Chinese tale tells of some men sent to harm a young girl who, upon seeing her beauty, become her protectors rather than her violators. That's how I felt seeing the Earth for the first time. I could not help but love and cherish her.</p>

<p>For those who have seen the Earth from space, and for the hundreds and perhaps thousands more who will, the experience most certainly changes your perspective. The things that we share in our world are far more valuable than those which divide us.</p>

<h2 class="section-heading">The Final Frontier</h2>

<p>There can be no thought of finishing for ‘aiming for the stars.’ Both figuratively and literally, it is a task to occupy the generations. And no matter how much progress one makes, there is always the thrill of just beginning.</p>

<p>There can be no thought of finishing for ‘aiming for the stars.’ Both figuratively and literally, it is a task to occupy the generations. And no matter how much progress one makes, there is always the thrill of just beginning.</p>

<blockquote class="blockquote">The dreams of yesterday are the hopes of today and the reality of tomorrow. Science has not yet mastered prophecy. We predict too much for the next year and yet far too little for the next ten.</blockquote>

<p>Spaceflights cannot be stopped. This is not the work of any one man or even a group of men. It is a historical process which mankind is carrying out in accordance with the natural laws of human development.</p>

<h2 class="section-heading">Reaching for the Stars</h2>

<p>As we got further and further away, it [the Earth] diminished in size. Finally it shrank to the size of a marble, the most beautiful you can imagine. That beautiful, warm, living object looked so fragile, so delicate, that if you touched it with a finger it would crumble and fall apart. Seeing this has to change a man.</p>

<img class="img-fluid" src="https://source.unsplash.com/Mn9Fa_wQH-M/800x450" alt="Demo Image">
<span class="caption text-muted">To go places and do things that have never been done before – that’s what living is all about.</span>

<p>Space, the final frontier. These are the voyages of the Starship Enterprise. Its five-year mission: to explore strange new worlds, to seek out new life and new civilizations, to boldly go where no man has gone before.</p>

<p>As I stand out here in the wonders of the unknown at Hadley, I sort of realize there’s a fundamental truth to our nature, Man must explore, and this is exploration at its greatest.</p>

<p>Placeholder text by <a href="http://spaceipsum.com/">Space Ipsum</a>. Photographs by <a href="https://unsplash.com/">Unsplash</a>.</p>]]></content><author><name>Jamal Kaplan</name></author><summary type="html"><![CDATA[Never in all their history have men been able truly to conceive of the world as one: a single sphere, a globe, having the qualities of a globe, a round earth in which all the directions eventually meet, in which there is no center because every point, or none, is center — an equal earth which all men occupy as equals. The airman's earth, if free men make it, will be truly round: a globe in practice, not in theory.]]></summary></entry><entry><title type="html">Failure is not an option</title><link href="http://localhost:4000/2020/01/28/exploration.html" rel="alternate" type="text/html" title="Failure is not an option" /><published>2020-01-28T19:45:13-08:00</published><updated>2020-01-28T19:45:13-08:00</updated><id>http://localhost:4000/2020/01/28/exploration</id><content type="html" xml:base="http://localhost:4000/2020/01/28/exploration.html"><![CDATA[<p>Never in all their history have men been able truly to conceive of the world as one: a single sphere, a globe, having the qualities of a globe, a round earth in which all the directions eventually meet, in which there is no center because every point, or none, is center — an equal earth which all men occupy as equals. The airman's earth, if free men make it, will be truly round: a globe in practice, not in theory.</p>

<p>Science cuts two ways, of course; its products can be used for both good and evil. But there's no turning back from science. The early warnings about technological dangers also come from science.</p>

<p>What was most significant about the lunar voyage was not that man set foot on the Moon but that they set eye on the earth.</p>

<p>A Chinese tale tells of some men sent to harm a young girl who, upon seeing her beauty, become her protectors rather than her violators. That's how I felt seeing the Earth for the first time. I could not help but love and cherish her.</p>

<p>For those who have seen the Earth from space, and for the hundreds and perhaps thousands more who will, the experience most certainly changes your perspective. The things that we share in our world are far more valuable than those which divide us.</p>

<h2 class="section-heading">The Final Frontier</h2>

<p>There can be no thought of finishing for ‘aiming for the stars.’ Both figuratively and literally, it is a task to occupy the generations. And no matter how much progress one makes, there is always the thrill of just beginning.</p>

<p>There can be no thought of finishing for ‘aiming for the stars.’ Both figuratively and literally, it is a task to occupy the generations. And no matter how much progress one makes, there is always the thrill of just beginning.</p>

<blockquote class="blockquote">The dreams of yesterday are the hopes of today and the reality of tomorrow. Science has not yet mastered prophecy. We predict too much for the next year and yet far too little for the next ten.</blockquote>

<p>Spaceflights cannot be stopped. This is not the work of any one man or even a group of men. It is a historical process which mankind is carrying out in accordance with the natural laws of human development.</p>

<h2 class="section-heading">Reaching for the Stars</h2>

<p>As we got further and further away, it [the Earth] diminished in size. Finally it shrank to the size of a marble, the most beautiful you can imagine. That beautiful, warm, living object looked so fragile, so delicate, that if you touched it with a finger it would crumble and fall apart. Seeing this has to change a man.</p>

<img class="img-fluid" src="https://source.unsplash.com/Mn9Fa_wQH-M/800x450" alt="Demo Image">
<span class="caption text-muted">To go places and do things that have never been done before – that’s what living is all about.</span>

<p>Space, the final frontier. These are the voyages of the Starship Enterprise. Its five-year mission: to explore strange new worlds, to seek out new life and new civilizations, to boldly go where no man has gone before.</p>

<p>As I stand out here in the wonders of the unknown at Hadley, I sort of realize there’s a fundamental truth to our nature, Man must explore, and this is exploration at its greatest.</p>

<p>Placeholder text by <a href="http://spaceipsum.com/">Space Ipsum</a>. Photographs by <a href="https://unsplash.com/">Unsplash</a>.</p>]]></content><author><name>Jamal Kaplan</name></author><summary type="html"><![CDATA[Never in all their history have men been able truly to conceive of the world as one: a single sphere, a globe, having the qualities of a globe, a round earth in which all the directions eventually meet, in which there is no center because every point, or none, is center — an equal earth which all men occupy as equals. The airman's earth, if free men make it, will be truly round: a globe in practice, not in theory.]]></summary></entry><entry><title type="html">The dreams of yesterday are the hopes of today and the reality of tomorrow.</title><link href="http://localhost:4000/2020/01/27/dreams.html" rel="alternate" type="text/html" title="The dreams of yesterday are the hopes of today and the reality of tomorrow." /><published>2020-01-27T19:45:13-08:00</published><updated>2020-01-27T19:45:13-08:00</updated><id>http://localhost:4000/2020/01/27/dreams</id><content type="html" xml:base="http://localhost:4000/2020/01/27/dreams.html"><![CDATA[<p>Never in all their history have men been able truly to conceive of the world as one: a single sphere, a globe, having the qualities of a globe, a round earth in which all the directions eventually meet, in which there is no center because every point, or none, is center — an equal earth which all men occupy as equals. The airman's earth, if free men make it, will be truly round: a globe in practice, not in theory.</p>

<p>Science cuts two ways, of course; its products can be used for both good and evil. But there's no turning back from science. The early warnings about technological dangers also come from science.</p>

<p>What was most significant about the lunar voyage was not that man set foot on the Moon but that they set eye on the earth.</p>

<p>A Chinese tale tells of some men sent to harm a young girl who, upon seeing her beauty, become her protectors rather than her violators. That's how I felt seeing the Earth for the first time. I could not help but love and cherish her.</p>

<p>For those who have seen the Earth from space, and for the hundreds and perhaps thousands more who will, the experience most certainly changes your perspective. The things that we share in our world are far more valuable than those which divide us.</p>

<h2 class="section-heading">The Final Frontier</h2>

<p>There can be no thought of finishing for ‘aiming for the stars.’ Both figuratively and literally, it is a task to occupy the generations. And no matter how much progress one makes, there is always the thrill of just beginning.</p>

<p>There can be no thought of finishing for ‘aiming for the stars.’ Both figuratively and literally, it is a task to occupy the generations. And no matter how much progress one makes, there is always the thrill of just beginning.</p>

<blockquote class="blockquote">The dreams of yesterday are the hopes of today and the reality of tomorrow. Science has not yet mastered prophecy. We predict too much for the next year and yet far too little for the next ten.</blockquote>

<p>Spaceflights cannot be stopped. This is not the work of any one man or even a group of men. It is a historical process which mankind is carrying out in accordance with the natural laws of human development.</p>

<h2 class="section-heading">Reaching for the Stars</h2>

<p>As we got further and further away, it [the Earth] diminished in size. Finally it shrank to the size of a marble, the most beautiful you can imagine. That beautiful, warm, living object looked so fragile, so delicate, that if you touched it with a finger it would crumble and fall apart. Seeing this has to change a man.</p>

<img class="img-fluid" src="https://source.unsplash.com/Mn9Fa_wQH-M/800x450" alt="Demo Image">
<span class="caption text-muted">To go places and do things that have never been done before – that’s what living is all about.</span>

<p>Space, the final frontier. These are the voyages of the Starship Enterprise. Its five-year mission: to explore strange new worlds, to seek out new life and new civilizations, to boldly go where no man has gone before.</p>

<p>As I stand out here in the wonders of the unknown at Hadley, I sort of realize there’s a fundamental truth to our nature, Man must explore, and this is exploration at its greatest.</p>

<p>Placeholder text by <a href="http://spaceipsum.com/">Space Ipsum</a>. Photographs by <a href="https://unsplash.com/">Unsplash</a>.</p>]]></content><author><name>Jamal Kaplan</name></author><summary type="html"><![CDATA[Never in all their history have men been able truly to conceive of the world as one: a single sphere, a globe, having the qualities of a globe, a round earth in which all the directions eventually meet, in which there is no center because every point, or none, is center — an equal earth which all men occupy as equals. The airman's earth, if free men make it, will be truly round: a globe in practice, not in theory.]]></summary></entry><entry><title type="html">Dinosaurs are extinct today</title><link href="http://localhost:4000/2020/01/26/dinosaurs.html" rel="alternate" type="text/html" title="Dinosaurs are extinct today" /><published>2020-01-26T19:45:13-08:00</published><updated>2020-01-26T19:45:13-08:00</updated><id>http://localhost:4000/2020/01/26/dinosaurs</id><content type="html" xml:base="http://localhost:4000/2020/01/26/dinosaurs.html"><![CDATA[<p>Never in all their history have men been able truly to conceive of the world as one: a single sphere, a globe, having the qualities of a globe, a round earth in which all the directions eventually meet, in which there is no center because every point, or none, is center — an equal earth which all men occupy as equals. The airman's earth, if free men make it, will be truly round: a globe in practice, not in theory.</p>

<p>Science cuts two ways, of course; its products can be used for both good and evil. But there's no turning back from science. The early warnings about technological dangers also come from science.</p>

<p>What was most significant about the lunar voyage was not that man set foot on the Moon but that they set eye on the earth.</p>

<p>A Chinese tale tells of some men sent to harm a young girl who, upon seeing her beauty, become her protectors rather than her violators. That's how I felt seeing the Earth for the first time. I could not help but love and cherish her.</p>

<p>For those who have seen the Earth from space, and for the hundreds and perhaps thousands more who will, the experience most certainly changes your perspective. The things that we share in our world are far more valuable than those which divide us.</p>

<h2 class="section-heading">The Final Frontier</h2>

<p>There can be no thought of finishing for ‘aiming for the stars.’ Both figuratively and literally, it is a task to occupy the generations. And no matter how much progress one makes, there is always the thrill of just beginning.</p>

<p>There can be no thought of finishing for ‘aiming for the stars.’ Both figuratively and literally, it is a task to occupy the generations. And no matter how much progress one makes, there is always the thrill of just beginning.</p>

<blockquote class="blockquote">The dreams of yesterday are the hopes of today and the reality of tomorrow. Science has not yet mastered prophecy. We predict too much for the next year and yet far too little for the next ten.</blockquote>

<p>Spaceflights cannot be stopped. This is not the work of any one man or even a group of men. It is a historical process which mankind is carrying out in accordance with the natural laws of human development.</p>

<h2 class="section-heading">Reaching for the Stars</h2>

<p>As we got further and further away, it [the Earth] diminished in size. Finally it shrank to the size of a marble, the most beautiful you can imagine. That beautiful, warm, living object looked so fragile, so delicate, that if you touched it with a finger it would crumble and fall apart. Seeing this has to change a man.</p>

<img class="img-fluid" src="https://source.unsplash.com/Mn9Fa_wQH-M/800x450" alt="Demo Image">
<span class="caption text-muted">To go places and do things that have never been done before – that’s what living is all about.</span>

<p>Space, the final frontier. These are the voyages of the Starship Enterprise. Its five-year mission: to explore strange new worlds, to seek out new life and new civilizations, to boldly go where no man has gone before.</p>

<p>As I stand out here in the wonders of the unknown at Hadley, I sort of realize there’s a fundamental truth to our nature, Man must explore, and this is exploration at its greatest.</p>

<p>Placeholder text by <a href="http://spaceipsum.com/">Space Ipsum</a>. Photographs by <a href="https://unsplash.com/">Unsplash</a>.</p>]]></content><author><name>Jamal Kaplan</name></author><summary type="html"><![CDATA[Never in all their history have men been able truly to conceive of the world as one: a single sphere, a globe, having the qualities of a globe, a round earth in which all the directions eventually meet, in which there is no center because every point, or none, is center — an equal earth which all men occupy as equals. The airman's earth, if free men make it, will be truly round: a globe in practice, not in theory.]]></summary></entry></feed>